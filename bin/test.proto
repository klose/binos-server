// Copyright (c) 2010 Bing Jiang
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Author: Bing Jiang
// Date: 11-24-2010
// The connection between Server and Client. 

package com.klose;

option java_package = "com.klose";
option java_outer_classname = "MsConnProto";

message Request {
  required string str_data = 1;
}

message Response {
  required string str_data = 1;
  optional int32 int_data = 2;
}
message SlaveRegisterRequest {
	required string ip_port = 1;
	optional int32 state = 2;
}
message SlaveRegisterResponse {
	required bool isSuccess = 1;
}
message SlaveInfo {
	required string ip_port = 1;
	required string work_dir = 2;
	message cpuInfo {
		required string vendor = 1;
		required string model = 2;
		required string mhz = 4;
		required string total_cpus = 5;
		required string total_idle_time = 6;
	}
	message memInfo {
		required string total_memory = 1;
		required string used = 2;
		required string avail = 4;
	}
	message diskInfo {
		required string dev_name = 1;
		required string size = 2;
		required string used = 3;
		required string avail = 4;
		required string used_pct = 5;
		required string dir_name = 6;
		required string type = 7;
    };
	required cpuInfo cpu_info = 3;
	required memInfo mem_info = 4;
	repeated diskInfo disk_info = 5;	
}
message MasterInfo {
	//used for returning slave lists
	required bool isSuccess = 1;
}
service TestService {
  rpc TestMethod(Request) returns(Response);
}
service RegisterSlaveService {
  rpc SlaveRegister(SlaveRegisterRequest) returns (SlaveRegisterResponse); 
}
service HeartbeatService {
  rpc HeartbeatTrans(SlaveInfo) returns (MasterInfo);
}
