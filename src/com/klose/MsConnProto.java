// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package com.klose;

public final class MsConnProto {
  private MsConnProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class UrgentRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UrgentRequest.newBuilder() to construct.
    private UrgentRequest() {
      initFields();
    }
    private UrgentRequest(boolean noInit) {}
    
    private static final UrgentRequest defaultInstance;
    public static UrgentRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UrgentRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_UrgentRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_UrgentRequest_fieldAccessorTable;
    }
    
    // required string str_data = 1;
    public static final int STR_DATA_FIELD_NUMBER = 1;
    private boolean hasStrData;
    private java.lang.String strData_ = "";
    public boolean hasStrData() { return hasStrData; }
    public java.lang.String getStrData() { return strData_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasStrData) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStrData()) {
        output.writeString(1, getStrData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStrData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getStrData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.UrgentRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.UrgentRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.UrgentRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.UrgentRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.UrgentRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.UrgentRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.UrgentRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.UrgentRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.UrgentRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.UrgentRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.UrgentRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.UrgentRequest result;
      
      // Construct using com.klose.MsConnProto.UrgentRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.UrgentRequest();
        return builder;
      }
      
      protected com.klose.MsConnProto.UrgentRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.UrgentRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.UrgentRequest.getDescriptor();
      }
      
      public com.klose.MsConnProto.UrgentRequest getDefaultInstanceForType() {
        return com.klose.MsConnProto.UrgentRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.UrgentRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.UrgentRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.UrgentRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.UrgentRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.UrgentRequest) {
          return mergeFrom((com.klose.MsConnProto.UrgentRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.UrgentRequest other) {
        if (other == com.klose.MsConnProto.UrgentRequest.getDefaultInstance()) return this;
        if (other.hasStrData()) {
          setStrData(other.getStrData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setStrData(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string str_data = 1;
      public boolean hasStrData() {
        return result.hasStrData();
      }
      public java.lang.String getStrData() {
        return result.getStrData();
      }
      public Builder setStrData(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStrData = true;
        result.strData_ = value;
        return this;
      }
      public Builder clearStrData() {
        result.hasStrData = false;
        result.strData_ = getDefaultInstance().getStrData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.UrgentRequest)
    }
    
    static {
      defaultInstance = new UrgentRequest(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.UrgentRequest)
  }
  
  public static final class UrgentResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use UrgentResponse.newBuilder() to construct.
    private UrgentResponse() {
      initFields();
    }
    private UrgentResponse(boolean noInit) {}
    
    private static final UrgentResponse defaultInstance;
    public static UrgentResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public UrgentResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_UrgentResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_UrgentResponse_fieldAccessorTable;
    }
    
    // required bool is_success = 1;
    public static final int IS_SUCCESS_FIELD_NUMBER = 1;
    private boolean hasIsSuccess;
    private boolean isSuccess_ = false;
    public boolean hasIsSuccess() { return hasIsSuccess; }
    public boolean getIsSuccess() { return isSuccess_; }
    
    // optional string str_data = 2;
    public static final int STR_DATA_FIELD_NUMBER = 2;
    private boolean hasStrData;
    private java.lang.String strData_ = "";
    public boolean hasStrData() { return hasStrData; }
    public java.lang.String getStrData() { return strData_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIsSuccess) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIsSuccess()) {
        output.writeBool(1, getIsSuccess());
      }
      if (hasStrData()) {
        output.writeString(2, getStrData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIsSuccess()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getIsSuccess());
      }
      if (hasStrData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getStrData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.UrgentResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.UrgentResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.UrgentResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.UrgentResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.UrgentResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.UrgentResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.UrgentResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.UrgentResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.UrgentResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.UrgentResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.UrgentResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.UrgentResponse result;
      
      // Construct using com.klose.MsConnProto.UrgentResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.UrgentResponse();
        return builder;
      }
      
      protected com.klose.MsConnProto.UrgentResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.UrgentResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.UrgentResponse.getDescriptor();
      }
      
      public com.klose.MsConnProto.UrgentResponse getDefaultInstanceForType() {
        return com.klose.MsConnProto.UrgentResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.UrgentResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.UrgentResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.UrgentResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.UrgentResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.UrgentResponse) {
          return mergeFrom((com.klose.MsConnProto.UrgentResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.UrgentResponse other) {
        if (other == com.klose.MsConnProto.UrgentResponse.getDefaultInstance()) return this;
        if (other.hasIsSuccess()) {
          setIsSuccess(other.getIsSuccess());
        }
        if (other.hasStrData()) {
          setStrData(other.getStrData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIsSuccess(input.readBool());
              break;
            }
            case 18: {
              setStrData(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required bool is_success = 1;
      public boolean hasIsSuccess() {
        return result.hasIsSuccess();
      }
      public boolean getIsSuccess() {
        return result.getIsSuccess();
      }
      public Builder setIsSuccess(boolean value) {
        result.hasIsSuccess = true;
        result.isSuccess_ = value;
        return this;
      }
      public Builder clearIsSuccess() {
        result.hasIsSuccess = false;
        result.isSuccess_ = false;
        return this;
      }
      
      // optional string str_data = 2;
      public boolean hasStrData() {
        return result.hasStrData();
      }
      public java.lang.String getStrData() {
        return result.getStrData();
      }
      public Builder setStrData(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStrData = true;
        result.strData_ = value;
        return this;
      }
      public Builder clearStrData() {
        result.hasStrData = false;
        result.strData_ = getDefaultInstance().getStrData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.UrgentResponse)
    }
    
    static {
      defaultInstance = new UrgentResponse(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.UrgentResponse)
  }
  
  public static final class TransformXMLPath extends
      com.google.protobuf.GeneratedMessage {
    // Use TransformXMLPath.newBuilder() to construct.
    private TransformXMLPath() {
      initFields();
    }
    private TransformXMLPath(boolean noInit) {}
    
    private static final TransformXMLPath defaultInstance;
    public static TransformXMLPath getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransformXMLPath getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_TransformXMLPath_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_TransformXMLPath_fieldAccessorTable;
    }
    
    // required string path = 1;
    public static final int PATH_FIELD_NUMBER = 1;
    private boolean hasPath;
    private java.lang.String path_ = "";
    public boolean hasPath() { return hasPath; }
    public java.lang.String getPath() { return path_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasPath) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPath()) {
        output.writeString(1, getPath());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPath()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPath());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.TransformXMLPath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.TransformXMLPath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TransformXMLPath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.TransformXMLPath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TransformXMLPath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.TransformXMLPath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TransformXMLPath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.TransformXMLPath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.TransformXMLPath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.TransformXMLPath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.TransformXMLPath prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.TransformXMLPath result;
      
      // Construct using com.klose.MsConnProto.TransformXMLPath.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.TransformXMLPath();
        return builder;
      }
      
      protected com.klose.MsConnProto.TransformXMLPath internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.TransformXMLPath();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.TransformXMLPath.getDescriptor();
      }
      
      public com.klose.MsConnProto.TransformXMLPath getDefaultInstanceForType() {
        return com.klose.MsConnProto.TransformXMLPath.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.TransformXMLPath build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.TransformXMLPath buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.TransformXMLPath buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.TransformXMLPath returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.TransformXMLPath) {
          return mergeFrom((com.klose.MsConnProto.TransformXMLPath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.TransformXMLPath other) {
        if (other == com.klose.MsConnProto.TransformXMLPath.getDefaultInstance()) return this;
        if (other.hasPath()) {
          setPath(other.getPath());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setPath(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string path = 1;
      public boolean hasPath() {
        return result.hasPath();
      }
      public java.lang.String getPath() {
        return result.getPath();
      }
      public Builder setPath(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPath = true;
        result.path_ = value;
        return this;
      }
      public Builder clearPath() {
        result.hasPath = false;
        result.path_ = getDefaultInstance().getPath();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.TransformXMLPath)
    }
    
    static {
      defaultInstance = new TransformXMLPath(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.TransformXMLPath)
  }
  
  public static final class SlaveRegisterInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use SlaveRegisterInfo.newBuilder() to construct.
    private SlaveRegisterInfo() {
      initFields();
    }
    private SlaveRegisterInfo(boolean noInit) {}
    
    private static final SlaveRegisterInfo defaultInstance;
    public static SlaveRegisterInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public SlaveRegisterInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveRegisterInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveRegisterInfo_fieldAccessorTable;
    }
    
    // required string ip_port = 1;
    public static final int IP_PORT_FIELD_NUMBER = 1;
    private boolean hasIpPort;
    private java.lang.String ipPort_ = "";
    public boolean hasIpPort() { return hasIpPort; }
    public java.lang.String getIpPort() { return ipPort_; }
    
    // optional int32 state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private int state_ = 0;
    public boolean hasState() { return hasState; }
    public int getState() { return state_; }
    
    // optional string login_time = 3;
    public static final int LOGIN_TIME_FIELD_NUMBER = 3;
    private boolean hasLoginTime;
    private java.lang.String loginTime_ = "";
    public boolean hasLoginTime() { return hasLoginTime; }
    public java.lang.String getLoginTime() { return loginTime_; }
    
    // optional string exit_time = 4;
    public static final int EXIT_TIME_FIELD_NUMBER = 4;
    private boolean hasExitTime;
    private java.lang.String exitTime_ = "";
    public boolean hasExitTime() { return hasExitTime; }
    public java.lang.String getExitTime() { return exitTime_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIpPort) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIpPort()) {
        output.writeString(1, getIpPort());
      }
      if (hasState()) {
        output.writeInt32(2, getState());
      }
      if (hasLoginTime()) {
        output.writeString(3, getLoginTime());
      }
      if (hasExitTime()) {
        output.writeString(4, getExitTime());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIpPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getIpPort());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getState());
      }
      if (hasLoginTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getLoginTime());
      }
      if (hasExitTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getExitTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.SlaveRegisterInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.SlaveRegisterInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.SlaveRegisterInfo result;
      
      // Construct using com.klose.MsConnProto.SlaveRegisterInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.SlaveRegisterInfo();
        return builder;
      }
      
      protected com.klose.MsConnProto.SlaveRegisterInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.SlaveRegisterInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.SlaveRegisterInfo.getDescriptor();
      }
      
      public com.klose.MsConnProto.SlaveRegisterInfo getDefaultInstanceForType() {
        return com.klose.MsConnProto.SlaveRegisterInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.SlaveRegisterInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.SlaveRegisterInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.SlaveRegisterInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.SlaveRegisterInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.SlaveRegisterInfo) {
          return mergeFrom((com.klose.MsConnProto.SlaveRegisterInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.SlaveRegisterInfo other) {
        if (other == com.klose.MsConnProto.SlaveRegisterInfo.getDefaultInstance()) return this;
        if (other.hasIpPort()) {
          setIpPort(other.getIpPort());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasLoginTime()) {
          setLoginTime(other.getLoginTime());
        }
        if (other.hasExitTime()) {
          setExitTime(other.getExitTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setIpPort(input.readString());
              break;
            }
            case 16: {
              setState(input.readInt32());
              break;
            }
            case 26: {
              setLoginTime(input.readString());
              break;
            }
            case 34: {
              setExitTime(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string ip_port = 1;
      public boolean hasIpPort() {
        return result.hasIpPort();
      }
      public java.lang.String getIpPort() {
        return result.getIpPort();
      }
      public Builder setIpPort(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIpPort = true;
        result.ipPort_ = value;
        return this;
      }
      public Builder clearIpPort() {
        result.hasIpPort = false;
        result.ipPort_ = getDefaultInstance().getIpPort();
        return this;
      }
      
      // optional int32 state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public int getState() {
        return result.getState();
      }
      public Builder setState(int value) {
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = 0;
        return this;
      }
      
      // optional string login_time = 3;
      public boolean hasLoginTime() {
        return result.hasLoginTime();
      }
      public java.lang.String getLoginTime() {
        return result.getLoginTime();
      }
      public Builder setLoginTime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLoginTime = true;
        result.loginTime_ = value;
        return this;
      }
      public Builder clearLoginTime() {
        result.hasLoginTime = false;
        result.loginTime_ = getDefaultInstance().getLoginTime();
        return this;
      }
      
      // optional string exit_time = 4;
      public boolean hasExitTime() {
        return result.hasExitTime();
      }
      public java.lang.String getExitTime() {
        return result.getExitTime();
      }
      public Builder setExitTime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasExitTime = true;
        result.exitTime_ = value;
        return this;
      }
      public Builder clearExitTime() {
        result.hasExitTime = false;
        result.exitTime_ = getDefaultInstance().getExitTime();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.SlaveRegisterInfo)
    }
    
    static {
      defaultInstance = new SlaveRegisterInfo(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.SlaveRegisterInfo)
  }
  
  public static final class SlaveRegisterResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SlaveRegisterResponse.newBuilder() to construct.
    private SlaveRegisterResponse() {
      initFields();
    }
    private SlaveRegisterResponse(boolean noInit) {}
    
    private static final SlaveRegisterResponse defaultInstance;
    public static SlaveRegisterResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SlaveRegisterResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveRegisterResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveRegisterResponse_fieldAccessorTable;
    }
    
    // required bool isSuccess = 1;
    public static final int ISSUCCESS_FIELD_NUMBER = 1;
    private boolean hasIsSuccess;
    private boolean isSuccess_ = false;
    public boolean hasIsSuccess() { return hasIsSuccess; }
    public boolean getIsSuccess() { return isSuccess_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIsSuccess) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIsSuccess()) {
        output.writeBool(1, getIsSuccess());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIsSuccess()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getIsSuccess());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.SlaveRegisterResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.SlaveRegisterResponse result;
      
      // Construct using com.klose.MsConnProto.SlaveRegisterResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.SlaveRegisterResponse();
        return builder;
      }
      
      protected com.klose.MsConnProto.SlaveRegisterResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.SlaveRegisterResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.SlaveRegisterResponse.getDescriptor();
      }
      
      public com.klose.MsConnProto.SlaveRegisterResponse getDefaultInstanceForType() {
        return com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.SlaveRegisterResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.SlaveRegisterResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.SlaveRegisterResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.SlaveRegisterResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.SlaveRegisterResponse) {
          return mergeFrom((com.klose.MsConnProto.SlaveRegisterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.SlaveRegisterResponse other) {
        if (other == com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance()) return this;
        if (other.hasIsSuccess()) {
          setIsSuccess(other.getIsSuccess());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIsSuccess(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required bool isSuccess = 1;
      public boolean hasIsSuccess() {
        return result.hasIsSuccess();
      }
      public boolean getIsSuccess() {
        return result.getIsSuccess();
      }
      public Builder setIsSuccess(boolean value) {
        result.hasIsSuccess = true;
        result.isSuccess_ = value;
        return this;
      }
      public Builder clearIsSuccess() {
        result.hasIsSuccess = false;
        result.isSuccess_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.SlaveRegisterResponse)
    }
    
    static {
      defaultInstance = new SlaveRegisterResponse(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.SlaveRegisterResponse)
  }
  
  public static final class SlaveInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use SlaveInfo.newBuilder() to construct.
    private SlaveInfo() {
      initFields();
    }
    private SlaveInfo(boolean noInit) {}
    
    private static final SlaveInfo defaultInstance;
    public static SlaveInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public SlaveInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveInfo_fieldAccessorTable;
    }
    
    public static final class cpuInfo extends
        com.google.protobuf.GeneratedMessage {
      // Use cpuInfo.newBuilder() to construct.
      private cpuInfo() {
        initFields();
      }
      private cpuInfo(boolean noInit) {}
      
      private static final cpuInfo defaultInstance;
      public static cpuInfo getDefaultInstance() {
        return defaultInstance;
      }
      
      public cpuInfo getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.klose.MsConnProto.internal_static_com_klose_SlaveInfo_cpuInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.klose.MsConnProto.internal_static_com_klose_SlaveInfo_cpuInfo_fieldAccessorTable;
      }
      
      // required string vendor = 1;
      public static final int VENDOR_FIELD_NUMBER = 1;
      private boolean hasVendor;
      private java.lang.String vendor_ = "";
      public boolean hasVendor() { return hasVendor; }
      public java.lang.String getVendor() { return vendor_; }
      
      // required string model = 2;
      public static final int MODEL_FIELD_NUMBER = 2;
      private boolean hasModel;
      private java.lang.String model_ = "";
      public boolean hasModel() { return hasModel; }
      public java.lang.String getModel() { return model_; }
      
      // required string mhz = 4;
      public static final int MHZ_FIELD_NUMBER = 4;
      private boolean hasMhz;
      private java.lang.String mhz_ = "";
      public boolean hasMhz() { return hasMhz; }
      public java.lang.String getMhz() { return mhz_; }
      
      // required string total_cpus = 5;
      public static final int TOTAL_CPUS_FIELD_NUMBER = 5;
      private boolean hasTotalCpus;
      private java.lang.String totalCpus_ = "";
      public boolean hasTotalCpus() { return hasTotalCpus; }
      public java.lang.String getTotalCpus() { return totalCpus_; }
      
      // required string total_idle_time = 6;
      public static final int TOTAL_IDLE_TIME_FIELD_NUMBER = 6;
      private boolean hasTotalIdleTime;
      private java.lang.String totalIdleTime_ = "";
      public boolean hasTotalIdleTime() { return hasTotalIdleTime; }
      public java.lang.String getTotalIdleTime() { return totalIdleTime_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasVendor) return false;
        if (!hasModel) return false;
        if (!hasMhz) return false;
        if (!hasTotalCpus) return false;
        if (!hasTotalIdleTime) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasVendor()) {
          output.writeString(1, getVendor());
        }
        if (hasModel()) {
          output.writeString(2, getModel());
        }
        if (hasMhz()) {
          output.writeString(4, getMhz());
        }
        if (hasTotalCpus()) {
          output.writeString(5, getTotalCpus());
        }
        if (hasTotalIdleTime()) {
          output.writeString(6, getTotalIdleTime());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasVendor()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getVendor());
        }
        if (hasModel()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getModel());
        }
        if (hasMhz()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getMhz());
        }
        if (hasTotalCpus()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(5, getTotalCpus());
        }
        if (hasTotalIdleTime()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(6, getTotalIdleTime());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.cpuInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.klose.MsConnProto.SlaveInfo.cpuInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.klose.MsConnProto.SlaveInfo.cpuInfo result;
        
        // Construct using com.klose.MsConnProto.SlaveInfo.cpuInfo.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.klose.MsConnProto.SlaveInfo.cpuInfo();
          return builder;
        }
        
        protected com.klose.MsConnProto.SlaveInfo.cpuInfo internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.klose.MsConnProto.SlaveInfo.cpuInfo();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.klose.MsConnProto.SlaveInfo.cpuInfo.getDescriptor();
        }
        
        public com.klose.MsConnProto.SlaveInfo.cpuInfo getDefaultInstanceForType() {
          return com.klose.MsConnProto.SlaveInfo.cpuInfo.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.klose.MsConnProto.SlaveInfo.cpuInfo build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.klose.MsConnProto.SlaveInfo.cpuInfo buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.klose.MsConnProto.SlaveInfo.cpuInfo buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.klose.MsConnProto.SlaveInfo.cpuInfo returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.klose.MsConnProto.SlaveInfo.cpuInfo) {
            return mergeFrom((com.klose.MsConnProto.SlaveInfo.cpuInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.klose.MsConnProto.SlaveInfo.cpuInfo other) {
          if (other == com.klose.MsConnProto.SlaveInfo.cpuInfo.getDefaultInstance()) return this;
          if (other.hasVendor()) {
            setVendor(other.getVendor());
          }
          if (other.hasModel()) {
            setModel(other.getModel());
          }
          if (other.hasMhz()) {
            setMhz(other.getMhz());
          }
          if (other.hasTotalCpus()) {
            setTotalCpus(other.getTotalCpus());
          }
          if (other.hasTotalIdleTime()) {
            setTotalIdleTime(other.getTotalIdleTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setVendor(input.readString());
                break;
              }
              case 18: {
                setModel(input.readString());
                break;
              }
              case 34: {
                setMhz(input.readString());
                break;
              }
              case 42: {
                setTotalCpus(input.readString());
                break;
              }
              case 50: {
                setTotalIdleTime(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string vendor = 1;
        public boolean hasVendor() {
          return result.hasVendor();
        }
        public java.lang.String getVendor() {
          return result.getVendor();
        }
        public Builder setVendor(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasVendor = true;
          result.vendor_ = value;
          return this;
        }
        public Builder clearVendor() {
          result.hasVendor = false;
          result.vendor_ = getDefaultInstance().getVendor();
          return this;
        }
        
        // required string model = 2;
        public boolean hasModel() {
          return result.hasModel();
        }
        public java.lang.String getModel() {
          return result.getModel();
        }
        public Builder setModel(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasModel = true;
          result.model_ = value;
          return this;
        }
        public Builder clearModel() {
          result.hasModel = false;
          result.model_ = getDefaultInstance().getModel();
          return this;
        }
        
        // required string mhz = 4;
        public boolean hasMhz() {
          return result.hasMhz();
        }
        public java.lang.String getMhz() {
          return result.getMhz();
        }
        public Builder setMhz(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasMhz = true;
          result.mhz_ = value;
          return this;
        }
        public Builder clearMhz() {
          result.hasMhz = false;
          result.mhz_ = getDefaultInstance().getMhz();
          return this;
        }
        
        // required string total_cpus = 5;
        public boolean hasTotalCpus() {
          return result.hasTotalCpus();
        }
        public java.lang.String getTotalCpus() {
          return result.getTotalCpus();
        }
        public Builder setTotalCpus(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasTotalCpus = true;
          result.totalCpus_ = value;
          return this;
        }
        public Builder clearTotalCpus() {
          result.hasTotalCpus = false;
          result.totalCpus_ = getDefaultInstance().getTotalCpus();
          return this;
        }
        
        // required string total_idle_time = 6;
        public boolean hasTotalIdleTime() {
          return result.hasTotalIdleTime();
        }
        public java.lang.String getTotalIdleTime() {
          return result.getTotalIdleTime();
        }
        public Builder setTotalIdleTime(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasTotalIdleTime = true;
          result.totalIdleTime_ = value;
          return this;
        }
        public Builder clearTotalIdleTime() {
          result.hasTotalIdleTime = false;
          result.totalIdleTime_ = getDefaultInstance().getTotalIdleTime();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:com.klose.SlaveInfo.cpuInfo)
      }
      
      static {
        defaultInstance = new cpuInfo(true);
        com.klose.MsConnProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:com.klose.SlaveInfo.cpuInfo)
    }
    
    public static final class memInfo extends
        com.google.protobuf.GeneratedMessage {
      // Use memInfo.newBuilder() to construct.
      private memInfo() {
        initFields();
      }
      private memInfo(boolean noInit) {}
      
      private static final memInfo defaultInstance;
      public static memInfo getDefaultInstance() {
        return defaultInstance;
      }
      
      public memInfo getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.klose.MsConnProto.internal_static_com_klose_SlaveInfo_memInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.klose.MsConnProto.internal_static_com_klose_SlaveInfo_memInfo_fieldAccessorTable;
      }
      
      // required string total_memory = 1;
      public static final int TOTAL_MEMORY_FIELD_NUMBER = 1;
      private boolean hasTotalMemory;
      private java.lang.String totalMemory_ = "";
      public boolean hasTotalMemory() { return hasTotalMemory; }
      public java.lang.String getTotalMemory() { return totalMemory_; }
      
      // required string used = 2;
      public static final int USED_FIELD_NUMBER = 2;
      private boolean hasUsed;
      private java.lang.String used_ = "";
      public boolean hasUsed() { return hasUsed; }
      public java.lang.String getUsed() { return used_; }
      
      // required string avail = 4;
      public static final int AVAIL_FIELD_NUMBER = 4;
      private boolean hasAvail;
      private java.lang.String avail_ = "";
      public boolean hasAvail() { return hasAvail; }
      public java.lang.String getAvail() { return avail_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasTotalMemory) return false;
        if (!hasUsed) return false;
        if (!hasAvail) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasTotalMemory()) {
          output.writeString(1, getTotalMemory());
        }
        if (hasUsed()) {
          output.writeString(2, getUsed());
        }
        if (hasAvail()) {
          output.writeString(4, getAvail());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasTotalMemory()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getTotalMemory());
        }
        if (hasUsed()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getUsed());
        }
        if (hasAvail()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getAvail());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.memInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.klose.MsConnProto.SlaveInfo.memInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.klose.MsConnProto.SlaveInfo.memInfo result;
        
        // Construct using com.klose.MsConnProto.SlaveInfo.memInfo.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.klose.MsConnProto.SlaveInfo.memInfo();
          return builder;
        }
        
        protected com.klose.MsConnProto.SlaveInfo.memInfo internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.klose.MsConnProto.SlaveInfo.memInfo();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.klose.MsConnProto.SlaveInfo.memInfo.getDescriptor();
        }
        
        public com.klose.MsConnProto.SlaveInfo.memInfo getDefaultInstanceForType() {
          return com.klose.MsConnProto.SlaveInfo.memInfo.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.klose.MsConnProto.SlaveInfo.memInfo build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.klose.MsConnProto.SlaveInfo.memInfo buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.klose.MsConnProto.SlaveInfo.memInfo buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.klose.MsConnProto.SlaveInfo.memInfo returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.klose.MsConnProto.SlaveInfo.memInfo) {
            return mergeFrom((com.klose.MsConnProto.SlaveInfo.memInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.klose.MsConnProto.SlaveInfo.memInfo other) {
          if (other == com.klose.MsConnProto.SlaveInfo.memInfo.getDefaultInstance()) return this;
          if (other.hasTotalMemory()) {
            setTotalMemory(other.getTotalMemory());
          }
          if (other.hasUsed()) {
            setUsed(other.getUsed());
          }
          if (other.hasAvail()) {
            setAvail(other.getAvail());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setTotalMemory(input.readString());
                break;
              }
              case 18: {
                setUsed(input.readString());
                break;
              }
              case 34: {
                setAvail(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string total_memory = 1;
        public boolean hasTotalMemory() {
          return result.hasTotalMemory();
        }
        public java.lang.String getTotalMemory() {
          return result.getTotalMemory();
        }
        public Builder setTotalMemory(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasTotalMemory = true;
          result.totalMemory_ = value;
          return this;
        }
        public Builder clearTotalMemory() {
          result.hasTotalMemory = false;
          result.totalMemory_ = getDefaultInstance().getTotalMemory();
          return this;
        }
        
        // required string used = 2;
        public boolean hasUsed() {
          return result.hasUsed();
        }
        public java.lang.String getUsed() {
          return result.getUsed();
        }
        public Builder setUsed(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsed = true;
          result.used_ = value;
          return this;
        }
        public Builder clearUsed() {
          result.hasUsed = false;
          result.used_ = getDefaultInstance().getUsed();
          return this;
        }
        
        // required string avail = 4;
        public boolean hasAvail() {
          return result.hasAvail();
        }
        public java.lang.String getAvail() {
          return result.getAvail();
        }
        public Builder setAvail(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasAvail = true;
          result.avail_ = value;
          return this;
        }
        public Builder clearAvail() {
          result.hasAvail = false;
          result.avail_ = getDefaultInstance().getAvail();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:com.klose.SlaveInfo.memInfo)
      }
      
      static {
        defaultInstance = new memInfo(true);
        com.klose.MsConnProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:com.klose.SlaveInfo.memInfo)
    }
    
    public static final class diskInfo extends
        com.google.protobuf.GeneratedMessage {
      // Use diskInfo.newBuilder() to construct.
      private diskInfo() {
        initFields();
      }
      private diskInfo(boolean noInit) {}
      
      private static final diskInfo defaultInstance;
      public static diskInfo getDefaultInstance() {
        return defaultInstance;
      }
      
      public diskInfo getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.klose.MsConnProto.internal_static_com_klose_SlaveInfo_diskInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.klose.MsConnProto.internal_static_com_klose_SlaveInfo_diskInfo_fieldAccessorTable;
      }
      
      // required string dev_name = 1;
      public static final int DEV_NAME_FIELD_NUMBER = 1;
      private boolean hasDevName;
      private java.lang.String devName_ = "";
      public boolean hasDevName() { return hasDevName; }
      public java.lang.String getDevName() { return devName_; }
      
      // required string size = 2;
      public static final int SIZE_FIELD_NUMBER = 2;
      private boolean hasSize;
      private java.lang.String size_ = "";
      public boolean hasSize() { return hasSize; }
      public java.lang.String getSize() { return size_; }
      
      // required string used = 3;
      public static final int USED_FIELD_NUMBER = 3;
      private boolean hasUsed;
      private java.lang.String used_ = "";
      public boolean hasUsed() { return hasUsed; }
      public java.lang.String getUsed() { return used_; }
      
      // required string avail = 4;
      public static final int AVAIL_FIELD_NUMBER = 4;
      private boolean hasAvail;
      private java.lang.String avail_ = "";
      public boolean hasAvail() { return hasAvail; }
      public java.lang.String getAvail() { return avail_; }
      
      // required string used_pct = 5;
      public static final int USED_PCT_FIELD_NUMBER = 5;
      private boolean hasUsedPct;
      private java.lang.String usedPct_ = "";
      public boolean hasUsedPct() { return hasUsedPct; }
      public java.lang.String getUsedPct() { return usedPct_; }
      
      // required string dir_name = 6;
      public static final int DIR_NAME_FIELD_NUMBER = 6;
      private boolean hasDirName;
      private java.lang.String dirName_ = "";
      public boolean hasDirName() { return hasDirName; }
      public java.lang.String getDirName() { return dirName_; }
      
      // required string type = 7;
      public static final int TYPE_FIELD_NUMBER = 7;
      private boolean hasType;
      private java.lang.String type_ = "";
      public boolean hasType() { return hasType; }
      public java.lang.String getType() { return type_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasDevName) return false;
        if (!hasSize) return false;
        if (!hasUsed) return false;
        if (!hasAvail) return false;
        if (!hasUsedPct) return false;
        if (!hasDirName) return false;
        if (!hasType) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasDevName()) {
          output.writeString(1, getDevName());
        }
        if (hasSize()) {
          output.writeString(2, getSize());
        }
        if (hasUsed()) {
          output.writeString(3, getUsed());
        }
        if (hasAvail()) {
          output.writeString(4, getAvail());
        }
        if (hasUsedPct()) {
          output.writeString(5, getUsedPct());
        }
        if (hasDirName()) {
          output.writeString(6, getDirName());
        }
        if (hasType()) {
          output.writeString(7, getType());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasDevName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getDevName());
        }
        if (hasSize()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getSize());
        }
        if (hasUsed()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getUsed());
        }
        if (hasAvail()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getAvail());
        }
        if (hasUsedPct()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(5, getUsedPct());
        }
        if (hasDirName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(6, getDirName());
        }
        if (hasType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(7, getType());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.SlaveInfo.diskInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.klose.MsConnProto.SlaveInfo.diskInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.klose.MsConnProto.SlaveInfo.diskInfo result;
        
        // Construct using com.klose.MsConnProto.SlaveInfo.diskInfo.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.klose.MsConnProto.SlaveInfo.diskInfo();
          return builder;
        }
        
        protected com.klose.MsConnProto.SlaveInfo.diskInfo internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.klose.MsConnProto.SlaveInfo.diskInfo();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.klose.MsConnProto.SlaveInfo.diskInfo.getDescriptor();
        }
        
        public com.klose.MsConnProto.SlaveInfo.diskInfo getDefaultInstanceForType() {
          return com.klose.MsConnProto.SlaveInfo.diskInfo.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.klose.MsConnProto.SlaveInfo.diskInfo build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.klose.MsConnProto.SlaveInfo.diskInfo buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.klose.MsConnProto.SlaveInfo.diskInfo buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.klose.MsConnProto.SlaveInfo.diskInfo returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.klose.MsConnProto.SlaveInfo.diskInfo) {
            return mergeFrom((com.klose.MsConnProto.SlaveInfo.diskInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.klose.MsConnProto.SlaveInfo.diskInfo other) {
          if (other == com.klose.MsConnProto.SlaveInfo.diskInfo.getDefaultInstance()) return this;
          if (other.hasDevName()) {
            setDevName(other.getDevName());
          }
          if (other.hasSize()) {
            setSize(other.getSize());
          }
          if (other.hasUsed()) {
            setUsed(other.getUsed());
          }
          if (other.hasAvail()) {
            setAvail(other.getAvail());
          }
          if (other.hasUsedPct()) {
            setUsedPct(other.getUsedPct());
          }
          if (other.hasDirName()) {
            setDirName(other.getDirName());
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setDevName(input.readString());
                break;
              }
              case 18: {
                setSize(input.readString());
                break;
              }
              case 26: {
                setUsed(input.readString());
                break;
              }
              case 34: {
                setAvail(input.readString());
                break;
              }
              case 42: {
                setUsedPct(input.readString());
                break;
              }
              case 50: {
                setDirName(input.readString());
                break;
              }
              case 58: {
                setType(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string dev_name = 1;
        public boolean hasDevName() {
          return result.hasDevName();
        }
        public java.lang.String getDevName() {
          return result.getDevName();
        }
        public Builder setDevName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasDevName = true;
          result.devName_ = value;
          return this;
        }
        public Builder clearDevName() {
          result.hasDevName = false;
          result.devName_ = getDefaultInstance().getDevName();
          return this;
        }
        
        // required string size = 2;
        public boolean hasSize() {
          return result.hasSize();
        }
        public java.lang.String getSize() {
          return result.getSize();
        }
        public Builder setSize(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasSize = true;
          result.size_ = value;
          return this;
        }
        public Builder clearSize() {
          result.hasSize = false;
          result.size_ = getDefaultInstance().getSize();
          return this;
        }
        
        // required string used = 3;
        public boolean hasUsed() {
          return result.hasUsed();
        }
        public java.lang.String getUsed() {
          return result.getUsed();
        }
        public Builder setUsed(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsed = true;
          result.used_ = value;
          return this;
        }
        public Builder clearUsed() {
          result.hasUsed = false;
          result.used_ = getDefaultInstance().getUsed();
          return this;
        }
        
        // required string avail = 4;
        public boolean hasAvail() {
          return result.hasAvail();
        }
        public java.lang.String getAvail() {
          return result.getAvail();
        }
        public Builder setAvail(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasAvail = true;
          result.avail_ = value;
          return this;
        }
        public Builder clearAvail() {
          result.hasAvail = false;
          result.avail_ = getDefaultInstance().getAvail();
          return this;
        }
        
        // required string used_pct = 5;
        public boolean hasUsedPct() {
          return result.hasUsedPct();
        }
        public java.lang.String getUsedPct() {
          return result.getUsedPct();
        }
        public Builder setUsedPct(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsedPct = true;
          result.usedPct_ = value;
          return this;
        }
        public Builder clearUsedPct() {
          result.hasUsedPct = false;
          result.usedPct_ = getDefaultInstance().getUsedPct();
          return this;
        }
        
        // required string dir_name = 6;
        public boolean hasDirName() {
          return result.hasDirName();
        }
        public java.lang.String getDirName() {
          return result.getDirName();
        }
        public Builder setDirName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasDirName = true;
          result.dirName_ = value;
          return this;
        }
        public Builder clearDirName() {
          result.hasDirName = false;
          result.dirName_ = getDefaultInstance().getDirName();
          return this;
        }
        
        // required string type = 7;
        public boolean hasType() {
          return result.hasType();
        }
        public java.lang.String getType() {
          return result.getType();
        }
        public Builder setType(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder clearType() {
          result.hasType = false;
          result.type_ = getDefaultInstance().getType();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:com.klose.SlaveInfo.diskInfo)
      }
      
      static {
        defaultInstance = new diskInfo(true);
        com.klose.MsConnProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:com.klose.SlaveInfo.diskInfo)
    }
    
    // required string ip_port = 1;
    public static final int IP_PORT_FIELD_NUMBER = 1;
    private boolean hasIpPort;
    private java.lang.String ipPort_ = "";
    public boolean hasIpPort() { return hasIpPort; }
    public java.lang.String getIpPort() { return ipPort_; }
    
    // required string work_dir = 2;
    public static final int WORK_DIR_FIELD_NUMBER = 2;
    private boolean hasWorkDir;
    private java.lang.String workDir_ = "";
    public boolean hasWorkDir() { return hasWorkDir; }
    public java.lang.String getWorkDir() { return workDir_; }
    
    // required .com.klose.SlaveInfo.cpuInfo cpu_info = 3;
    public static final int CPU_INFO_FIELD_NUMBER = 3;
    private boolean hasCpuInfo;
    private com.klose.MsConnProto.SlaveInfo.cpuInfo cpuInfo_;
    public boolean hasCpuInfo() { return hasCpuInfo; }
    public com.klose.MsConnProto.SlaveInfo.cpuInfo getCpuInfo() { return cpuInfo_; }
    
    // required .com.klose.SlaveInfo.memInfo mem_info = 4;
    public static final int MEM_INFO_FIELD_NUMBER = 4;
    private boolean hasMemInfo;
    private com.klose.MsConnProto.SlaveInfo.memInfo memInfo_;
    public boolean hasMemInfo() { return hasMemInfo; }
    public com.klose.MsConnProto.SlaveInfo.memInfo getMemInfo() { return memInfo_; }
    
    // repeated .com.klose.SlaveInfo.diskInfo disk_info = 5;
    public static final int DISK_INFO_FIELD_NUMBER = 5;
    private java.util.List<com.klose.MsConnProto.SlaveInfo.diskInfo> diskInfo_ =
      java.util.Collections.emptyList();
    public java.util.List<com.klose.MsConnProto.SlaveInfo.diskInfo> getDiskInfoList() {
      return diskInfo_;
    }
    public int getDiskInfoCount() { return diskInfo_.size(); }
    public com.klose.MsConnProto.SlaveInfo.diskInfo getDiskInfo(int index) {
      return diskInfo_.get(index);
    }
    
    private void initFields() {
      cpuInfo_ = com.klose.MsConnProto.SlaveInfo.cpuInfo.getDefaultInstance();
      memInfo_ = com.klose.MsConnProto.SlaveInfo.memInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasIpPort) return false;
      if (!hasWorkDir) return false;
      if (!hasCpuInfo) return false;
      if (!hasMemInfo) return false;
      if (!getCpuInfo().isInitialized()) return false;
      if (!getMemInfo().isInitialized()) return false;
      for (com.klose.MsConnProto.SlaveInfo.diskInfo element : getDiskInfoList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIpPort()) {
        output.writeString(1, getIpPort());
      }
      if (hasWorkDir()) {
        output.writeString(2, getWorkDir());
      }
      if (hasCpuInfo()) {
        output.writeMessage(3, getCpuInfo());
      }
      if (hasMemInfo()) {
        output.writeMessage(4, getMemInfo());
      }
      for (com.klose.MsConnProto.SlaveInfo.diskInfo element : getDiskInfoList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIpPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getIpPort());
      }
      if (hasWorkDir()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getWorkDir());
      }
      if (hasCpuInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCpuInfo());
      }
      if (hasMemInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMemInfo());
      }
      for (com.klose.MsConnProto.SlaveInfo.diskInfo element : getDiskInfoList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.SlaveInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.SlaveInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.SlaveInfo result;
      
      // Construct using com.klose.MsConnProto.SlaveInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.SlaveInfo();
        return builder;
      }
      
      protected com.klose.MsConnProto.SlaveInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.SlaveInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.SlaveInfo.getDescriptor();
      }
      
      public com.klose.MsConnProto.SlaveInfo getDefaultInstanceForType() {
        return com.klose.MsConnProto.SlaveInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.SlaveInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.SlaveInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.SlaveInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.diskInfo_ != java.util.Collections.EMPTY_LIST) {
          result.diskInfo_ =
            java.util.Collections.unmodifiableList(result.diskInfo_);
        }
        com.klose.MsConnProto.SlaveInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.SlaveInfo) {
          return mergeFrom((com.klose.MsConnProto.SlaveInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.SlaveInfo other) {
        if (other == com.klose.MsConnProto.SlaveInfo.getDefaultInstance()) return this;
        if (other.hasIpPort()) {
          setIpPort(other.getIpPort());
        }
        if (other.hasWorkDir()) {
          setWorkDir(other.getWorkDir());
        }
        if (other.hasCpuInfo()) {
          mergeCpuInfo(other.getCpuInfo());
        }
        if (other.hasMemInfo()) {
          mergeMemInfo(other.getMemInfo());
        }
        if (!other.diskInfo_.isEmpty()) {
          if (result.diskInfo_.isEmpty()) {
            result.diskInfo_ = new java.util.ArrayList<com.klose.MsConnProto.SlaveInfo.diskInfo>();
          }
          result.diskInfo_.addAll(other.diskInfo_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setIpPort(input.readString());
              break;
            }
            case 18: {
              setWorkDir(input.readString());
              break;
            }
            case 26: {
              com.klose.MsConnProto.SlaveInfo.cpuInfo.Builder subBuilder = com.klose.MsConnProto.SlaveInfo.cpuInfo.newBuilder();
              if (hasCpuInfo()) {
                subBuilder.mergeFrom(getCpuInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCpuInfo(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.klose.MsConnProto.SlaveInfo.memInfo.Builder subBuilder = com.klose.MsConnProto.SlaveInfo.memInfo.newBuilder();
              if (hasMemInfo()) {
                subBuilder.mergeFrom(getMemInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMemInfo(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.klose.MsConnProto.SlaveInfo.diskInfo.Builder subBuilder = com.klose.MsConnProto.SlaveInfo.diskInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDiskInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string ip_port = 1;
      public boolean hasIpPort() {
        return result.hasIpPort();
      }
      public java.lang.String getIpPort() {
        return result.getIpPort();
      }
      public Builder setIpPort(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIpPort = true;
        result.ipPort_ = value;
        return this;
      }
      public Builder clearIpPort() {
        result.hasIpPort = false;
        result.ipPort_ = getDefaultInstance().getIpPort();
        return this;
      }
      
      // required string work_dir = 2;
      public boolean hasWorkDir() {
        return result.hasWorkDir();
      }
      public java.lang.String getWorkDir() {
        return result.getWorkDir();
      }
      public Builder setWorkDir(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWorkDir = true;
        result.workDir_ = value;
        return this;
      }
      public Builder clearWorkDir() {
        result.hasWorkDir = false;
        result.workDir_ = getDefaultInstance().getWorkDir();
        return this;
      }
      
      // required .com.klose.SlaveInfo.cpuInfo cpu_info = 3;
      public boolean hasCpuInfo() {
        return result.hasCpuInfo();
      }
      public com.klose.MsConnProto.SlaveInfo.cpuInfo getCpuInfo() {
        return result.getCpuInfo();
      }
      public Builder setCpuInfo(com.klose.MsConnProto.SlaveInfo.cpuInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCpuInfo = true;
        result.cpuInfo_ = value;
        return this;
      }
      public Builder setCpuInfo(com.klose.MsConnProto.SlaveInfo.cpuInfo.Builder builderForValue) {
        result.hasCpuInfo = true;
        result.cpuInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeCpuInfo(com.klose.MsConnProto.SlaveInfo.cpuInfo value) {
        if (result.hasCpuInfo() &&
            result.cpuInfo_ != com.klose.MsConnProto.SlaveInfo.cpuInfo.getDefaultInstance()) {
          result.cpuInfo_ =
            com.klose.MsConnProto.SlaveInfo.cpuInfo.newBuilder(result.cpuInfo_).mergeFrom(value).buildPartial();
        } else {
          result.cpuInfo_ = value;
        }
        result.hasCpuInfo = true;
        return this;
      }
      public Builder clearCpuInfo() {
        result.hasCpuInfo = false;
        result.cpuInfo_ = com.klose.MsConnProto.SlaveInfo.cpuInfo.getDefaultInstance();
        return this;
      }
      
      // required .com.klose.SlaveInfo.memInfo mem_info = 4;
      public boolean hasMemInfo() {
        return result.hasMemInfo();
      }
      public com.klose.MsConnProto.SlaveInfo.memInfo getMemInfo() {
        return result.getMemInfo();
      }
      public Builder setMemInfo(com.klose.MsConnProto.SlaveInfo.memInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMemInfo = true;
        result.memInfo_ = value;
        return this;
      }
      public Builder setMemInfo(com.klose.MsConnProto.SlaveInfo.memInfo.Builder builderForValue) {
        result.hasMemInfo = true;
        result.memInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeMemInfo(com.klose.MsConnProto.SlaveInfo.memInfo value) {
        if (result.hasMemInfo() &&
            result.memInfo_ != com.klose.MsConnProto.SlaveInfo.memInfo.getDefaultInstance()) {
          result.memInfo_ =
            com.klose.MsConnProto.SlaveInfo.memInfo.newBuilder(result.memInfo_).mergeFrom(value).buildPartial();
        } else {
          result.memInfo_ = value;
        }
        result.hasMemInfo = true;
        return this;
      }
      public Builder clearMemInfo() {
        result.hasMemInfo = false;
        result.memInfo_ = com.klose.MsConnProto.SlaveInfo.memInfo.getDefaultInstance();
        return this;
      }
      
      // repeated .com.klose.SlaveInfo.diskInfo disk_info = 5;
      public java.util.List<com.klose.MsConnProto.SlaveInfo.diskInfo> getDiskInfoList() {
        return java.util.Collections.unmodifiableList(result.diskInfo_);
      }
      public int getDiskInfoCount() {
        return result.getDiskInfoCount();
      }
      public com.klose.MsConnProto.SlaveInfo.diskInfo getDiskInfo(int index) {
        return result.getDiskInfo(index);
      }
      public Builder setDiskInfo(int index, com.klose.MsConnProto.SlaveInfo.diskInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.diskInfo_.set(index, value);
        return this;
      }
      public Builder setDiskInfo(int index, com.klose.MsConnProto.SlaveInfo.diskInfo.Builder builderForValue) {
        result.diskInfo_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDiskInfo(com.klose.MsConnProto.SlaveInfo.diskInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.diskInfo_.isEmpty()) {
          result.diskInfo_ = new java.util.ArrayList<com.klose.MsConnProto.SlaveInfo.diskInfo>();
        }
        result.diskInfo_.add(value);
        return this;
      }
      public Builder addDiskInfo(com.klose.MsConnProto.SlaveInfo.diskInfo.Builder builderForValue) {
        if (result.diskInfo_.isEmpty()) {
          result.diskInfo_ = new java.util.ArrayList<com.klose.MsConnProto.SlaveInfo.diskInfo>();
        }
        result.diskInfo_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDiskInfo(
          java.lang.Iterable<? extends com.klose.MsConnProto.SlaveInfo.diskInfo> values) {
        if (result.diskInfo_.isEmpty()) {
          result.diskInfo_ = new java.util.ArrayList<com.klose.MsConnProto.SlaveInfo.diskInfo>();
        }
        super.addAll(values, result.diskInfo_);
        return this;
      }
      public Builder clearDiskInfo() {
        result.diskInfo_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.SlaveInfo)
    }
    
    static {
      defaultInstance = new SlaveInfo(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.SlaveInfo)
  }
  
  public static final class MasterInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use MasterInfo.newBuilder() to construct.
    private MasterInfo() {
      initFields();
    }
    private MasterInfo(boolean noInit) {}
    
    private static final MasterInfo defaultInstance;
    public static MasterInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public MasterInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_MasterInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_MasterInfo_fieldAccessorTable;
    }
    
    // required bool isSuccess = 1;
    public static final int ISSUCCESS_FIELD_NUMBER = 1;
    private boolean hasIsSuccess;
    private boolean isSuccess_ = false;
    public boolean hasIsSuccess() { return hasIsSuccess; }
    public boolean getIsSuccess() { return isSuccess_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIsSuccess) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIsSuccess()) {
        output.writeBool(1, getIsSuccess());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIsSuccess()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getIsSuccess());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.MasterInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.MasterInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.MasterInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.MasterInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.MasterInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.MasterInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.MasterInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.MasterInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.MasterInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.MasterInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.MasterInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.MasterInfo result;
      
      // Construct using com.klose.MsConnProto.MasterInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.MasterInfo();
        return builder;
      }
      
      protected com.klose.MsConnProto.MasterInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.MasterInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.MasterInfo.getDescriptor();
      }
      
      public com.klose.MsConnProto.MasterInfo getDefaultInstanceForType() {
        return com.klose.MsConnProto.MasterInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.MasterInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.MasterInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.MasterInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.MasterInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.MasterInfo) {
          return mergeFrom((com.klose.MsConnProto.MasterInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.MasterInfo other) {
        if (other == com.klose.MsConnProto.MasterInfo.getDefaultInstance()) return this;
        if (other.hasIsSuccess()) {
          setIsSuccess(other.getIsSuccess());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIsSuccess(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required bool isSuccess = 1;
      public boolean hasIsSuccess() {
        return result.hasIsSuccess();
      }
      public boolean getIsSuccess() {
        return result.getIsSuccess();
      }
      public Builder setIsSuccess(boolean value) {
        result.hasIsSuccess = true;
        result.isSuccess_ = value;
        return this;
      }
      public Builder clearIsSuccess() {
        result.hasIsSuccess = false;
        result.isSuccess_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.MasterInfo)
    }
    
    static {
      defaultInstance = new MasterInfo(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.MasterInfo)
  }
  
  public static final class InformSlaves extends
      com.google.protobuf.GeneratedMessage {
    // Use InformSlaves.newBuilder() to construct.
    private InformSlaves() {
      initFields();
    }
    private InformSlaves(boolean noInit) {}
    
    private static final InformSlaves defaultInstance;
    public static InformSlaves getDefaultInstance() {
      return defaultInstance;
    }
    
    public InformSlaves getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_InformSlaves_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_InformSlaves_fieldAccessorTable;
    }
    
    // required string ip_port = 1;
    public static final int IP_PORT_FIELD_NUMBER = 1;
    private boolean hasIpPort;
    private java.lang.String ipPort_ = "";
    public boolean hasIpPort() { return hasIpPort; }
    public java.lang.String getIpPort() { return ipPort_; }
    
    // optional string message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private boolean hasMessage;
    private java.lang.String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public java.lang.String getMessage() { return message_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIpPort) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIpPort()) {
        output.writeString(1, getIpPort());
      }
      if (hasMessage()) {
        output.writeString(2, getMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIpPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getIpPort());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.InformSlaves parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.InformSlaves parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.InformSlaves parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.InformSlaves parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.InformSlaves parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.InformSlaves parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.InformSlaves parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.InformSlaves parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.InformSlaves parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.InformSlaves parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.InformSlaves prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.InformSlaves result;
      
      // Construct using com.klose.MsConnProto.InformSlaves.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.InformSlaves();
        return builder;
      }
      
      protected com.klose.MsConnProto.InformSlaves internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.InformSlaves();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.InformSlaves.getDescriptor();
      }
      
      public com.klose.MsConnProto.InformSlaves getDefaultInstanceForType() {
        return com.klose.MsConnProto.InformSlaves.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.InformSlaves build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.InformSlaves buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.InformSlaves buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.InformSlaves returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.InformSlaves) {
          return mergeFrom((com.klose.MsConnProto.InformSlaves)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.InformSlaves other) {
        if (other == com.klose.MsConnProto.InformSlaves.getDefaultInstance()) return this;
        if (other.hasIpPort()) {
          setIpPort(other.getIpPort());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setIpPort(input.readString());
              break;
            }
            case 18: {
              setMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string ip_port = 1;
      public boolean hasIpPort() {
        return result.hasIpPort();
      }
      public java.lang.String getIpPort() {
        return result.getIpPort();
      }
      public Builder setIpPort(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIpPort = true;
        result.ipPort_ = value;
        return this;
      }
      public Builder clearIpPort() {
        result.hasIpPort = false;
        result.ipPort_ = getDefaultInstance().getIpPort();
        return this;
      }
      
      // optional string message = 2;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public java.lang.String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.InformSlaves)
    }
    
    static {
      defaultInstance = new InformSlaves(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.InformSlaves)
  }
  
  public static final class TaskChangeState extends
      com.google.protobuf.GeneratedMessage {
    // Use TaskChangeState.newBuilder() to construct.
    private TaskChangeState() {
      initFields();
    }
    private TaskChangeState(boolean noInit) {}
    
    private static final TaskChangeState defaultInstance;
    public static TaskChangeState getDefaultInstance() {
      return defaultInstance;
    }
    
    public TaskChangeState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_TaskChangeState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_TaskChangeState_fieldAccessorTable;
    }
    
    public static final class outputProperty extends
        com.google.protobuf.GeneratedMessage {
      // Use outputProperty.newBuilder() to construct.
      private outputProperty() {
        initFields();
      }
      private outputProperty(boolean noInit) {}
      
      private static final outputProperty defaultInstance;
      public static outputProperty getDefaultInstance() {
        return defaultInstance;
      }
      
      public outputProperty getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.klose.MsConnProto.internal_static_com_klose_TaskChangeState_outputProperty_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.klose.MsConnProto.internal_static_com_klose_TaskChangeState_outputProperty_fieldAccessorTable;
      }
      
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private boolean hasKey;
      private java.lang.String key_ = "";
      public boolean hasKey() { return hasKey; }
      public java.lang.String getKey() { return key_; }
      
      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private boolean hasValue;
      private java.lang.String value_ = "";
      public boolean hasValue() { return hasValue; }
      public java.lang.String getValue() { return value_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasKey) return false;
        if (!hasValue) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasKey()) {
          output.writeString(1, getKey());
        }
        if (hasValue()) {
          output.writeString(2, getValue());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasKey()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getKey());
        }
        if (hasValue()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getValue());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.TaskChangeState.outputProperty parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.klose.MsConnProto.TaskChangeState.outputProperty prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.klose.MsConnProto.TaskChangeState.outputProperty result;
        
        // Construct using com.klose.MsConnProto.TaskChangeState.outputProperty.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.klose.MsConnProto.TaskChangeState.outputProperty();
          return builder;
        }
        
        protected com.klose.MsConnProto.TaskChangeState.outputProperty internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.klose.MsConnProto.TaskChangeState.outputProperty();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.klose.MsConnProto.TaskChangeState.outputProperty.getDescriptor();
        }
        
        public com.klose.MsConnProto.TaskChangeState.outputProperty getDefaultInstanceForType() {
          return com.klose.MsConnProto.TaskChangeState.outputProperty.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.klose.MsConnProto.TaskChangeState.outputProperty build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.klose.MsConnProto.TaskChangeState.outputProperty buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.klose.MsConnProto.TaskChangeState.outputProperty buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.klose.MsConnProto.TaskChangeState.outputProperty returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.klose.MsConnProto.TaskChangeState.outputProperty) {
            return mergeFrom((com.klose.MsConnProto.TaskChangeState.outputProperty)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.klose.MsConnProto.TaskChangeState.outputProperty other) {
          if (other == com.klose.MsConnProto.TaskChangeState.outputProperty.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setKey(input.readString());
                break;
              }
              case 18: {
                setValue(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string key = 1;
        public boolean hasKey() {
          return result.hasKey();
        }
        public java.lang.String getKey() {
          return result.getKey();
        }
        public Builder setKey(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
          result.key_ = value;
          return this;
        }
        public Builder clearKey() {
          result.hasKey = false;
          result.key_ = getDefaultInstance().getKey();
          return this;
        }
        
        // required string value = 2;
        public boolean hasValue() {
          return result.hasValue();
        }
        public java.lang.String getValue() {
          return result.getValue();
        }
        public Builder setValue(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder clearValue() {
          result.hasValue = false;
          result.value_ = getDefaultInstance().getValue();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:com.klose.TaskChangeState.outputProperty)
      }
      
      static {
        defaultInstance = new outputProperty(true);
        com.klose.MsConnProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:com.klose.TaskChangeState.outputProperty)
    }
    
    // required string taskId = 1;
    public static final int TASKID_FIELD_NUMBER = 1;
    private boolean hasTaskId;
    private java.lang.String taskId_ = "";
    public boolean hasTaskId() { return hasTaskId; }
    public java.lang.String getTaskId() { return taskId_; }
    
    // required string state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private java.lang.String state_ = "";
    public boolean hasState() { return hasState; }
    public java.lang.String getState() { return state_; }
    
    // repeated .com.klose.TaskChangeState.outputProperty output = 3;
    public static final int OUTPUT_FIELD_NUMBER = 3;
    private java.util.List<com.klose.MsConnProto.TaskChangeState.outputProperty> output_ =
      java.util.Collections.emptyList();
    public java.util.List<com.klose.MsConnProto.TaskChangeState.outputProperty> getOutputList() {
      return output_;
    }
    public int getOutputCount() { return output_.size(); }
    public com.klose.MsConnProto.TaskChangeState.outputProperty getOutput(int index) {
      return output_.get(index);
    }
    
    // optional string usedTime = 4;
    public static final int USEDTIME_FIELD_NUMBER = 4;
    private boolean hasUsedTime;
    private java.lang.String usedTime_ = "";
    public boolean hasUsedTime() { return hasUsedTime; }
    public java.lang.String getUsedTime() { return usedTime_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTaskId) return false;
      if (!hasState) return false;
      for (com.klose.MsConnProto.TaskChangeState.outputProperty element : getOutputList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTaskId()) {
        output.writeString(1, getTaskId());
      }
      if (hasState()) {
        output.writeString(2, getState());
      }
      for (com.klose.MsConnProto.TaskChangeState.outputProperty element : getOutputList()) {
        output.writeMessage(3, element);
      }
      if (hasUsedTime()) {
        output.writeString(4, getUsedTime());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTaskId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getTaskId());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getState());
      }
      for (com.klose.MsConnProto.TaskChangeState.outputProperty element : getOutputList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasUsedTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getUsedTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.TaskChangeState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.TaskChangeState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TaskChangeState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.TaskChangeState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TaskChangeState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.TaskChangeState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TaskChangeState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.TaskChangeState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.TaskChangeState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.TaskChangeState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.TaskChangeState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.TaskChangeState result;
      
      // Construct using com.klose.MsConnProto.TaskChangeState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.TaskChangeState();
        return builder;
      }
      
      protected com.klose.MsConnProto.TaskChangeState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.TaskChangeState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.TaskChangeState.getDescriptor();
      }
      
      public com.klose.MsConnProto.TaskChangeState getDefaultInstanceForType() {
        return com.klose.MsConnProto.TaskChangeState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.TaskChangeState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.TaskChangeState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.TaskChangeState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.output_ != java.util.Collections.EMPTY_LIST) {
          result.output_ =
            java.util.Collections.unmodifiableList(result.output_);
        }
        com.klose.MsConnProto.TaskChangeState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.TaskChangeState) {
          return mergeFrom((com.klose.MsConnProto.TaskChangeState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.TaskChangeState other) {
        if (other == com.klose.MsConnProto.TaskChangeState.getDefaultInstance()) return this;
        if (other.hasTaskId()) {
          setTaskId(other.getTaskId());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (!other.output_.isEmpty()) {
          if (result.output_.isEmpty()) {
            result.output_ = new java.util.ArrayList<com.klose.MsConnProto.TaskChangeState.outputProperty>();
          }
          result.output_.addAll(other.output_);
        }
        if (other.hasUsedTime()) {
          setUsedTime(other.getUsedTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setTaskId(input.readString());
              break;
            }
            case 18: {
              setState(input.readString());
              break;
            }
            case 26: {
              com.klose.MsConnProto.TaskChangeState.outputProperty.Builder subBuilder = com.klose.MsConnProto.TaskChangeState.outputProperty.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addOutput(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setUsedTime(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string taskId = 1;
      public boolean hasTaskId() {
        return result.hasTaskId();
      }
      public java.lang.String getTaskId() {
        return result.getTaskId();
      }
      public Builder setTaskId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTaskId = true;
        result.taskId_ = value;
        return this;
      }
      public Builder clearTaskId() {
        result.hasTaskId = false;
        result.taskId_ = getDefaultInstance().getTaskId();
        return this;
      }
      
      // required string state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public java.lang.String getState() {
        return result.getState();
      }
      public Builder setState(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = getDefaultInstance().getState();
        return this;
      }
      
      // repeated .com.klose.TaskChangeState.outputProperty output = 3;
      public java.util.List<com.klose.MsConnProto.TaskChangeState.outputProperty> getOutputList() {
        return java.util.Collections.unmodifiableList(result.output_);
      }
      public int getOutputCount() {
        return result.getOutputCount();
      }
      public com.klose.MsConnProto.TaskChangeState.outputProperty getOutput(int index) {
        return result.getOutput(index);
      }
      public Builder setOutput(int index, com.klose.MsConnProto.TaskChangeState.outputProperty value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.output_.set(index, value);
        return this;
      }
      public Builder setOutput(int index, com.klose.MsConnProto.TaskChangeState.outputProperty.Builder builderForValue) {
        result.output_.set(index, builderForValue.build());
        return this;
      }
      public Builder addOutput(com.klose.MsConnProto.TaskChangeState.outputProperty value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.output_.isEmpty()) {
          result.output_ = new java.util.ArrayList<com.klose.MsConnProto.TaskChangeState.outputProperty>();
        }
        result.output_.add(value);
        return this;
      }
      public Builder addOutput(com.klose.MsConnProto.TaskChangeState.outputProperty.Builder builderForValue) {
        if (result.output_.isEmpty()) {
          result.output_ = new java.util.ArrayList<com.klose.MsConnProto.TaskChangeState.outputProperty>();
        }
        result.output_.add(builderForValue.build());
        return this;
      }
      public Builder addAllOutput(
          java.lang.Iterable<? extends com.klose.MsConnProto.TaskChangeState.outputProperty> values) {
        if (result.output_.isEmpty()) {
          result.output_ = new java.util.ArrayList<com.klose.MsConnProto.TaskChangeState.outputProperty>();
        }
        super.addAll(values, result.output_);
        return this;
      }
      public Builder clearOutput() {
        result.output_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string usedTime = 4;
      public boolean hasUsedTime() {
        return result.hasUsedTime();
      }
      public java.lang.String getUsedTime() {
        return result.getUsedTime();
      }
      public Builder setUsedTime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsedTime = true;
        result.usedTime_ = value;
        return this;
      }
      public Builder clearUsedTime() {
        result.hasUsedTime = false;
        result.usedTime_ = getDefaultInstance().getUsedTime();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.TaskChangeState)
    }
    
    static {
      defaultInstance = new TaskChangeState(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.TaskChangeState)
  }
  
  public static final class AllocateIdentity extends
      com.google.protobuf.GeneratedMessage {
    // Use AllocateIdentity.newBuilder() to construct.
    private AllocateIdentity() {
      initFields();
    }
    private AllocateIdentity(boolean noInit) {}
    
    private static final AllocateIdentity defaultInstance;
    public static AllocateIdentity getDefaultInstance() {
      return defaultInstance;
    }
    
    public AllocateIdentity getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_AllocateIdentity_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_AllocateIdentity_fieldAccessorTable;
    }
    
    public static final class JobProperty extends
        com.google.protobuf.GeneratedMessage {
      // Use JobProperty.newBuilder() to construct.
      private JobProperty() {
        initFields();
      }
      private JobProperty(boolean noInit) {}
      
      private static final JobProperty defaultInstance;
      public static JobProperty getDefaultInstance() {
        return defaultInstance;
      }
      
      public JobProperty getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.klose.MsConnProto.internal_static_com_klose_AllocateIdentity_JobProperty_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.klose.MsConnProto.internal_static_com_klose_AllocateIdentity_JobProperty_fieldAccessorTable;
      }
      
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private boolean hasKey;
      private java.lang.String key_ = "";
      public boolean hasKey() { return hasKey; }
      public java.lang.String getKey() { return key_; }
      
      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private boolean hasValue;
      private java.lang.String value_ = "";
      public boolean hasValue() { return hasValue; }
      public java.lang.String getValue() { return value_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasKey) return false;
        if (!hasValue) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasKey()) {
          output.writeString(1, getKey());
        }
        if (hasValue()) {
          output.writeString(2, getValue());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasKey()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getKey());
        }
        if (hasValue()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getValue());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.klose.MsConnProto.AllocateIdentity.JobProperty parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.klose.MsConnProto.AllocateIdentity.JobProperty prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.klose.MsConnProto.AllocateIdentity.JobProperty result;
        
        // Construct using com.klose.MsConnProto.AllocateIdentity.JobProperty.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.klose.MsConnProto.AllocateIdentity.JobProperty();
          return builder;
        }
        
        protected com.klose.MsConnProto.AllocateIdentity.JobProperty internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.klose.MsConnProto.AllocateIdentity.JobProperty();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.klose.MsConnProto.AllocateIdentity.JobProperty.getDescriptor();
        }
        
        public com.klose.MsConnProto.AllocateIdentity.JobProperty getDefaultInstanceForType() {
          return com.klose.MsConnProto.AllocateIdentity.JobProperty.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.klose.MsConnProto.AllocateIdentity.JobProperty build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.klose.MsConnProto.AllocateIdentity.JobProperty buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.klose.MsConnProto.AllocateIdentity.JobProperty buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.klose.MsConnProto.AllocateIdentity.JobProperty returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.klose.MsConnProto.AllocateIdentity.JobProperty) {
            return mergeFrom((com.klose.MsConnProto.AllocateIdentity.JobProperty)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.klose.MsConnProto.AllocateIdentity.JobProperty other) {
          if (other == com.klose.MsConnProto.AllocateIdentity.JobProperty.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setKey(input.readString());
                break;
              }
              case 18: {
                setValue(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string key = 1;
        public boolean hasKey() {
          return result.hasKey();
        }
        public java.lang.String getKey() {
          return result.getKey();
        }
        public Builder setKey(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
          result.key_ = value;
          return this;
        }
        public Builder clearKey() {
          result.hasKey = false;
          result.key_ = getDefaultInstance().getKey();
          return this;
        }
        
        // required string value = 2;
        public boolean hasValue() {
          return result.hasValue();
        }
        public java.lang.String getValue() {
          return result.getValue();
        }
        public Builder setValue(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder clearValue() {
          result.hasValue = false;
          result.value_ = getDefaultInstance().getValue();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:com.klose.AllocateIdentity.JobProperty)
      }
      
      static {
        defaultInstance = new JobProperty(true);
        com.klose.MsConnProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:com.klose.AllocateIdentity.JobProperty)
    }
    
    // required string slaveIpPort = 1;
    public static final int SLAVEIPPORT_FIELD_NUMBER = 1;
    private boolean hasSlaveIpPort;
    private java.lang.String slaveIpPort_ = "";
    public boolean hasSlaveIpPort() { return hasSlaveIpPort; }
    public java.lang.String getSlaveIpPort() { return slaveIpPort_; }
    
    // required string taskIds = 2;
    public static final int TASKIDS_FIELD_NUMBER = 2;
    private boolean hasTaskIds;
    private java.lang.String taskIds_ = "";
    public boolean hasTaskIds() { return hasTaskIds; }
    public java.lang.String getTaskIds() { return taskIds_; }
    
    // repeated .com.klose.AllocateIdentity.JobProperty properties = 3;
    public static final int PROPERTIES_FIELD_NUMBER = 3;
    private java.util.List<com.klose.MsConnProto.AllocateIdentity.JobProperty> properties_ =
      java.util.Collections.emptyList();
    public java.util.List<com.klose.MsConnProto.AllocateIdentity.JobProperty> getPropertiesList() {
      return properties_;
    }
    public int getPropertiesCount() { return properties_.size(); }
    public com.klose.MsConnProto.AllocateIdentity.JobProperty getProperties(int index) {
      return properties_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasSlaveIpPort) return false;
      if (!hasTaskIds) return false;
      for (com.klose.MsConnProto.AllocateIdentity.JobProperty element : getPropertiesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSlaveIpPort()) {
        output.writeString(1, getSlaveIpPort());
      }
      if (hasTaskIds()) {
        output.writeString(2, getTaskIds());
      }
      for (com.klose.MsConnProto.AllocateIdentity.JobProperty element : getPropertiesList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSlaveIpPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSlaveIpPort());
      }
      if (hasTaskIds()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTaskIds());
      }
      for (com.klose.MsConnProto.AllocateIdentity.JobProperty element : getPropertiesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.AllocateIdentity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.AllocateIdentity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.AllocateIdentity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.AllocateIdentity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.AllocateIdentity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.AllocateIdentity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.AllocateIdentity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.AllocateIdentity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.AllocateIdentity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.AllocateIdentity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.AllocateIdentity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.AllocateIdentity result;
      
      // Construct using com.klose.MsConnProto.AllocateIdentity.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.AllocateIdentity();
        return builder;
      }
      
      protected com.klose.MsConnProto.AllocateIdentity internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.AllocateIdentity();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.AllocateIdentity.getDescriptor();
      }
      
      public com.klose.MsConnProto.AllocateIdentity getDefaultInstanceForType() {
        return com.klose.MsConnProto.AllocateIdentity.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.AllocateIdentity build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.AllocateIdentity buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.AllocateIdentity buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.properties_ != java.util.Collections.EMPTY_LIST) {
          result.properties_ =
            java.util.Collections.unmodifiableList(result.properties_);
        }
        com.klose.MsConnProto.AllocateIdentity returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.AllocateIdentity) {
          return mergeFrom((com.klose.MsConnProto.AllocateIdentity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.AllocateIdentity other) {
        if (other == com.klose.MsConnProto.AllocateIdentity.getDefaultInstance()) return this;
        if (other.hasSlaveIpPort()) {
          setSlaveIpPort(other.getSlaveIpPort());
        }
        if (other.hasTaskIds()) {
          setTaskIds(other.getTaskIds());
        }
        if (!other.properties_.isEmpty()) {
          if (result.properties_.isEmpty()) {
            result.properties_ = new java.util.ArrayList<com.klose.MsConnProto.AllocateIdentity.JobProperty>();
          }
          result.properties_.addAll(other.properties_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setSlaveIpPort(input.readString());
              break;
            }
            case 18: {
              setTaskIds(input.readString());
              break;
            }
            case 26: {
              com.klose.MsConnProto.AllocateIdentity.JobProperty.Builder subBuilder = com.klose.MsConnProto.AllocateIdentity.JobProperty.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addProperties(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string slaveIpPort = 1;
      public boolean hasSlaveIpPort() {
        return result.hasSlaveIpPort();
      }
      public java.lang.String getSlaveIpPort() {
        return result.getSlaveIpPort();
      }
      public Builder setSlaveIpPort(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSlaveIpPort = true;
        result.slaveIpPort_ = value;
        return this;
      }
      public Builder clearSlaveIpPort() {
        result.hasSlaveIpPort = false;
        result.slaveIpPort_ = getDefaultInstance().getSlaveIpPort();
        return this;
      }
      
      // required string taskIds = 2;
      public boolean hasTaskIds() {
        return result.hasTaskIds();
      }
      public java.lang.String getTaskIds() {
        return result.getTaskIds();
      }
      public Builder setTaskIds(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTaskIds = true;
        result.taskIds_ = value;
        return this;
      }
      public Builder clearTaskIds() {
        result.hasTaskIds = false;
        result.taskIds_ = getDefaultInstance().getTaskIds();
        return this;
      }
      
      // repeated .com.klose.AllocateIdentity.JobProperty properties = 3;
      public java.util.List<com.klose.MsConnProto.AllocateIdentity.JobProperty> getPropertiesList() {
        return java.util.Collections.unmodifiableList(result.properties_);
      }
      public int getPropertiesCount() {
        return result.getPropertiesCount();
      }
      public com.klose.MsConnProto.AllocateIdentity.JobProperty getProperties(int index) {
        return result.getProperties(index);
      }
      public Builder setProperties(int index, com.klose.MsConnProto.AllocateIdentity.JobProperty value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.properties_.set(index, value);
        return this;
      }
      public Builder setProperties(int index, com.klose.MsConnProto.AllocateIdentity.JobProperty.Builder builderForValue) {
        result.properties_.set(index, builderForValue.build());
        return this;
      }
      public Builder addProperties(com.klose.MsConnProto.AllocateIdentity.JobProperty value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.properties_.isEmpty()) {
          result.properties_ = new java.util.ArrayList<com.klose.MsConnProto.AllocateIdentity.JobProperty>();
        }
        result.properties_.add(value);
        return this;
      }
      public Builder addProperties(com.klose.MsConnProto.AllocateIdentity.JobProperty.Builder builderForValue) {
        if (result.properties_.isEmpty()) {
          result.properties_ = new java.util.ArrayList<com.klose.MsConnProto.AllocateIdentity.JobProperty>();
        }
        result.properties_.add(builderForValue.build());
        return this;
      }
      public Builder addAllProperties(
          java.lang.Iterable<? extends com.klose.MsConnProto.AllocateIdentity.JobProperty> values) {
        if (result.properties_.isEmpty()) {
          result.properties_ = new java.util.ArrayList<com.klose.MsConnProto.AllocateIdentity.JobProperty>();
        }
        super.addAll(values, result.properties_);
        return this;
      }
      public Builder clearProperties() {
        result.properties_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.AllocateIdentity)
    }
    
    static {
      defaultInstance = new AllocateIdentity(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.AllocateIdentity)
  }
  
  public static final class TState extends
      com.google.protobuf.GeneratedMessage {
    // Use TState.newBuilder() to construct.
    private TState() {
      initFields();
    }
    private TState(boolean noInit) {}
    
    private static final TState defaultInstance;
    public static TState getDefaultInstance() {
      return defaultInstance;
    }
    
    public TState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_TState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_TState_fieldAccessorTable;
    }
    
    // required string taskState = 1;
    public static final int TASKSTATE_FIELD_NUMBER = 1;
    private boolean hasTaskState;
    private java.lang.String taskState_ = "";
    public boolean hasTaskState() { return hasTaskState; }
    public java.lang.String getTaskState() { return taskState_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTaskState) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTaskState()) {
        output.writeString(1, getTaskState());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTaskState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getTaskState());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.TState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.TState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.TState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.TState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.TState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.TState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.TState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.TState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.TState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.TState result;
      
      // Construct using com.klose.MsConnProto.TState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.TState();
        return builder;
      }
      
      protected com.klose.MsConnProto.TState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.TState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.TState.getDescriptor();
      }
      
      public com.klose.MsConnProto.TState getDefaultInstanceForType() {
        return com.klose.MsConnProto.TState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.TState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.TState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.TState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.TState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.TState) {
          return mergeFrom((com.klose.MsConnProto.TState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.TState other) {
        if (other == com.klose.MsConnProto.TState.getDefaultInstance()) return this;
        if (other.hasTaskState()) {
          setTaskState(other.getTaskState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setTaskState(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string taskState = 1;
      public boolean hasTaskState() {
        return result.hasTaskState();
      }
      public java.lang.String getTaskState() {
        return result.getTaskState();
      }
      public Builder setTaskState(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTaskState = true;
        result.taskState_ = value;
        return this;
      }
      public Builder clearTaskState() {
        result.hasTaskState = false;
        result.taskState_ = getDefaultInstance().getTaskState();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.TState)
    }
    
    static {
      defaultInstance = new TState(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.TState)
  }
  
  public static final class ConfirmMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use ConfirmMessage.newBuilder() to construct.
    private ConfirmMessage() {
      initFields();
    }
    private ConfirmMessage(boolean noInit) {}
    
    private static final ConfirmMessage defaultInstance;
    public static ConfirmMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConfirmMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_ConfirmMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_ConfirmMessage_fieldAccessorTable;
    }
    
    // required bool isSuccess = 1;
    public static final int ISSUCCESS_FIELD_NUMBER = 1;
    private boolean hasIsSuccess;
    private boolean isSuccess_ = false;
    public boolean hasIsSuccess() { return hasIsSuccess; }
    public boolean getIsSuccess() { return isSuccess_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIsSuccess) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIsSuccess()) {
        output.writeBool(1, getIsSuccess());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIsSuccess()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getIsSuccess());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.ConfirmMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.ConfirmMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ConfirmMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.ConfirmMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ConfirmMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.ConfirmMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ConfirmMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.ConfirmMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.ConfirmMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.ConfirmMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.ConfirmMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.ConfirmMessage result;
      
      // Construct using com.klose.MsConnProto.ConfirmMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.ConfirmMessage();
        return builder;
      }
      
      protected com.klose.MsConnProto.ConfirmMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.ConfirmMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.ConfirmMessage.getDescriptor();
      }
      
      public com.klose.MsConnProto.ConfirmMessage getDefaultInstanceForType() {
        return com.klose.MsConnProto.ConfirmMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.ConfirmMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.ConfirmMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.ConfirmMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.ConfirmMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.ConfirmMessage) {
          return mergeFrom((com.klose.MsConnProto.ConfirmMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.ConfirmMessage other) {
        if (other == com.klose.MsConnProto.ConfirmMessage.getDefaultInstance()) return this;
        if (other.hasIsSuccess()) {
          setIsSuccess(other.getIsSuccess());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIsSuccess(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required bool isSuccess = 1;
      public boolean hasIsSuccess() {
        return result.hasIsSuccess();
      }
      public boolean getIsSuccess() {
        return result.getIsSuccess();
      }
      public Builder setIsSuccess(boolean value) {
        result.hasIsSuccess = true;
        result.isSuccess_ = value;
        return this;
      }
      public Builder clearIsSuccess() {
        result.hasIsSuccess = false;
        result.isSuccess_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.ConfirmMessage)
    }
    
    static {
      defaultInstance = new ConfirmMessage(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.ConfirmMessage)
  }
  
  public static final class ExecOrder extends
      com.google.protobuf.GeneratedMessage {
    // Use ExecOrder.newBuilder() to construct.
    private ExecOrder() {
      initFields();
    }
    private ExecOrder(boolean noInit) {}
    
    private static final ExecOrder defaultInstance;
    public static ExecOrder getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExecOrder getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_ExecOrder_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_ExecOrder_fieldAccessorTable;
    }
    
    // required string order = 1;
    public static final int ORDER_FIELD_NUMBER = 1;
    private boolean hasOrder;
    private java.lang.String order_ = "";
    public boolean hasOrder() { return hasOrder; }
    public java.lang.String getOrder() { return order_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasOrder) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOrder()) {
        output.writeString(1, getOrder());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOrder()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getOrder());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.ExecOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.ExecOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.ExecOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.ExecOrder prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.ExecOrder result;
      
      // Construct using com.klose.MsConnProto.ExecOrder.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.ExecOrder();
        return builder;
      }
      
      protected com.klose.MsConnProto.ExecOrder internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.ExecOrder();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.ExecOrder.getDescriptor();
      }
      
      public com.klose.MsConnProto.ExecOrder getDefaultInstanceForType() {
        return com.klose.MsConnProto.ExecOrder.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.ExecOrder build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.ExecOrder buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.ExecOrder buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.ExecOrder returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.ExecOrder) {
          return mergeFrom((com.klose.MsConnProto.ExecOrder)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.ExecOrder other) {
        if (other == com.klose.MsConnProto.ExecOrder.getDefaultInstance()) return this;
        if (other.hasOrder()) {
          setOrder(other.getOrder());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setOrder(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string order = 1;
      public boolean hasOrder() {
        return result.hasOrder();
      }
      public java.lang.String getOrder() {
        return result.getOrder();
      }
      public Builder setOrder(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder clearOrder() {
        result.hasOrder = false;
        result.order_ = getDefaultInstance().getOrder();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.ExecOrder)
    }
    
    static {
      defaultInstance = new ExecOrder(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.ExecOrder)
  }
  
  public static final class ExecOrderResp extends
      com.google.protobuf.GeneratedMessage {
    // Use ExecOrderResp.newBuilder() to construct.
    private ExecOrderResp() {
      initFields();
    }
    private ExecOrderResp(boolean noInit) {}
    
    private static final ExecOrderResp defaultInstance;
    public static ExecOrderResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExecOrderResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_ExecOrderResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_ExecOrderResp_fieldAccessorTable;
    }
    
    // required bool isExecuted = 1;
    public static final int ISEXECUTED_FIELD_NUMBER = 1;
    private boolean hasIsExecuted;
    private boolean isExecuted_ = false;
    public boolean hasIsExecuted() { return hasIsExecuted; }
    public boolean getIsExecuted() { return isExecuted_; }
    
    // optional string result_message = 2;
    public static final int RESULT_MESSAGE_FIELD_NUMBER = 2;
    private boolean hasResultMessage;
    private java.lang.String resultMessage_ = "";
    public boolean hasResultMessage() { return hasResultMessage; }
    public java.lang.String getResultMessage() { return resultMessage_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIsExecuted) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIsExecuted()) {
        output.writeBool(1, getIsExecuted());
      }
      if (hasResultMessage()) {
        output.writeString(2, getResultMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIsExecuted()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getIsExecuted());
      }
      if (hasResultMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getResultMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.ExecOrderResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrderResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrderResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrderResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrderResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrderResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrderResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.ExecOrderResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.ExecOrderResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.ExecOrderResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.ExecOrderResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.ExecOrderResp result;
      
      // Construct using com.klose.MsConnProto.ExecOrderResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.ExecOrderResp();
        return builder;
      }
      
      protected com.klose.MsConnProto.ExecOrderResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.ExecOrderResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.ExecOrderResp.getDescriptor();
      }
      
      public com.klose.MsConnProto.ExecOrderResp getDefaultInstanceForType() {
        return com.klose.MsConnProto.ExecOrderResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.ExecOrderResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.ExecOrderResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.ExecOrderResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.ExecOrderResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.ExecOrderResp) {
          return mergeFrom((com.klose.MsConnProto.ExecOrderResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.ExecOrderResp other) {
        if (other == com.klose.MsConnProto.ExecOrderResp.getDefaultInstance()) return this;
        if (other.hasIsExecuted()) {
          setIsExecuted(other.getIsExecuted());
        }
        if (other.hasResultMessage()) {
          setResultMessage(other.getResultMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIsExecuted(input.readBool());
              break;
            }
            case 18: {
              setResultMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required bool isExecuted = 1;
      public boolean hasIsExecuted() {
        return result.hasIsExecuted();
      }
      public boolean getIsExecuted() {
        return result.getIsExecuted();
      }
      public Builder setIsExecuted(boolean value) {
        result.hasIsExecuted = true;
        result.isExecuted_ = value;
        return this;
      }
      public Builder clearIsExecuted() {
        result.hasIsExecuted = false;
        result.isExecuted_ = false;
        return this;
      }
      
      // optional string result_message = 2;
      public boolean hasResultMessage() {
        return result.hasResultMessage();
      }
      public java.lang.String getResultMessage() {
        return result.getResultMessage();
      }
      public Builder setResultMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasResultMessage = true;
        result.resultMessage_ = value;
        return this;
      }
      public Builder clearResultMessage() {
        result.hasResultMessage = false;
        result.resultMessage_ = getDefaultInstance().getResultMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.ExecOrderResp)
    }
    
    static {
      defaultInstance = new ExecOrderResp(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.ExecOrderResp)
  }
  
  public static abstract class MasterUrgentExit
      implements com.google.protobuf.Service {
    protected MasterUrgentExit() {}
    
    public interface Interface {
      public abstract void urgentExit(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.InformSlaves request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new MasterUrgentExit() {
        @Override
        public  void urgentExit(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.InformSlaves request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done) {
          impl.urgentExit(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.urgentExit(controller, (com.klose.MsConnProto.InformSlaves)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.InformSlaves.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.ConfirmMessage.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void urgentExit(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.InformSlaves request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.urgentExit(controller, (com.klose.MsConnProto.InformSlaves)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.ConfirmMessage>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.InformSlaves.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.ConfirmMessage.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.MasterUrgentExit implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void urgentExit(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.InformSlaves request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.ConfirmMessage.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.ConfirmMessage.class,
            com.klose.MsConnProto.ConfirmMessage.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.ConfirmMessage urgentExit(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.InformSlaves request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.ConfirmMessage urgentExit(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.InformSlaves request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.ConfirmMessage) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.ConfirmMessage.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class SlaveUrgentExit
      implements com.google.protobuf.Service {
    protected SlaveUrgentExit() {}
    
    public interface Interface {
      public abstract void urgentExit(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.UrgentRequest request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.UrgentResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new SlaveUrgentExit() {
        @Override
        public  void urgentExit(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.UrgentRequest request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.UrgentResponse> done) {
          impl.urgentExit(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.urgentExit(controller, (com.klose.MsConnProto.UrgentRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.UrgentRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.UrgentResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void urgentExit(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.UrgentRequest request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.UrgentResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(1);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.urgentExit(controller, (com.klose.MsConnProto.UrgentRequest)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.UrgentResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.UrgentRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.UrgentResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.SlaveUrgentExit implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void urgentExit(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.UrgentRequest request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.UrgentResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.UrgentResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.UrgentResponse.class,
            com.klose.MsConnProto.UrgentResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.UrgentResponse urgentExit(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.UrgentRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.UrgentResponse urgentExit(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.UrgentRequest request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.UrgentResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.UrgentResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class RegisterSlaveService
      implements com.google.protobuf.Service {
    protected RegisterSlaveService() {}
    
    public interface Interface {
      public abstract void slaveRegister(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveRegisterInfo request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.SlaveRegisterResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new RegisterSlaveService() {
        @Override
        public  void slaveRegister(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.SlaveRegisterInfo request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.SlaveRegisterResponse> done) {
          impl.slaveRegister(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.slaveRegister(controller, (com.klose.MsConnProto.SlaveRegisterInfo)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.SlaveRegisterInfo.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void slaveRegister(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.SlaveRegisterInfo request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.SlaveRegisterResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(2);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.slaveRegister(controller, (com.klose.MsConnProto.SlaveRegisterInfo)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.SlaveRegisterResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.SlaveRegisterInfo.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.RegisterSlaveService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void slaveRegister(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveRegisterInfo request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.SlaveRegisterResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.SlaveRegisterResponse.class,
            com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.SlaveRegisterResponse slaveRegister(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveRegisterInfo request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.SlaveRegisterResponse slaveRegister(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveRegisterInfo request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.SlaveRegisterResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class HeartbeatService
      implements com.google.protobuf.Service {
    protected HeartbeatService() {}
    
    public interface Interface {
      public abstract void heartbeatTrans(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveInfo request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.MasterInfo> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new HeartbeatService() {
        @Override
        public  void heartbeatTrans(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.SlaveInfo request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.MasterInfo> done) {
          impl.heartbeatTrans(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.heartbeatTrans(controller, (com.klose.MsConnProto.SlaveInfo)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.SlaveInfo.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.MasterInfo.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void heartbeatTrans(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.SlaveInfo request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.MasterInfo> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(3);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.heartbeatTrans(controller, (com.klose.MsConnProto.SlaveInfo)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.MasterInfo>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.SlaveInfo.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.MasterInfo.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.HeartbeatService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void heartbeatTrans(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveInfo request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.MasterInfo> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.MasterInfo.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.MasterInfo.class,
            com.klose.MsConnProto.MasterInfo.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.MasterInfo heartbeatTrans(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveInfo request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.MasterInfo heartbeatTrans(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveInfo request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.MasterInfo) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.MasterInfo.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class SlaveOrderExecutorService
      implements com.google.protobuf.Service {
    protected SlaveOrderExecutorService() {}
    
    public interface Interface {
      public abstract void executeOrder(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.ExecOrder request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.ExecOrderResp> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new SlaveOrderExecutorService() {
        @Override
        public  void executeOrder(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.ExecOrder request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.ExecOrderResp> done) {
          impl.executeOrder(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.executeOrder(controller, (com.klose.MsConnProto.ExecOrder)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.ExecOrder.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.ExecOrderResp.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void executeOrder(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.ExecOrder request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.ExecOrderResp> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(4);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.executeOrder(controller, (com.klose.MsConnProto.ExecOrder)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.ExecOrderResp>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.ExecOrder.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.ExecOrderResp.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.SlaveOrderExecutorService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void executeOrder(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.ExecOrder request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.ExecOrderResp> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.ExecOrderResp.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.ExecOrderResp.class,
            com.klose.MsConnProto.ExecOrderResp.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.ExecOrderResp executeOrder(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.ExecOrder request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.ExecOrderResp executeOrder(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.ExecOrder request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.ExecOrderResp) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.ExecOrderResp.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class XMLPathTransService
      implements com.google.protobuf.Service {
    protected XMLPathTransService() {}
    
    public interface Interface {
      public abstract void xmlTrans(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.TransformXMLPath request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new XMLPathTransService() {
        @Override
        public  void xmlTrans(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.TransformXMLPath request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done) {
          impl.xmlTrans(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.xmlTrans(controller, (com.klose.MsConnProto.TransformXMLPath)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.TransformXMLPath.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.ConfirmMessage.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void xmlTrans(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.TransformXMLPath request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(5);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.xmlTrans(controller, (com.klose.MsConnProto.TransformXMLPath)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.ConfirmMessage>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.TransformXMLPath.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.ConfirmMessage.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.XMLPathTransService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void xmlTrans(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.TransformXMLPath request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.ConfirmMessage.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.ConfirmMessage.class,
            com.klose.MsConnProto.ConfirmMessage.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.ConfirmMessage xmlTrans(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.TransformXMLPath request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.ConfirmMessage xmlTrans(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.TransformXMLPath request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.ConfirmMessage) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.ConfirmMessage.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class TaskStateChangeService
      implements com.google.protobuf.Service {
    protected TaskStateChangeService() {}
    
    public interface Interface {
      public abstract void stateChange(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.TaskChangeState request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new TaskStateChangeService() {
        @Override
        public  void stateChange(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.TaskChangeState request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done) {
          impl.stateChange(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.stateChange(controller, (com.klose.MsConnProto.TaskChangeState)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.TaskChangeState.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.ConfirmMessage.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void stateChange(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.TaskChangeState request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(6);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.stateChange(controller, (com.klose.MsConnProto.TaskChangeState)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.ConfirmMessage>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.TaskChangeState.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.ConfirmMessage.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.TaskStateChangeService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void stateChange(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.TaskChangeState request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.ConfirmMessage> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.ConfirmMessage.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.ConfirmMessage.class,
            com.klose.MsConnProto.ConfirmMessage.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.ConfirmMessage stateChange(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.TaskChangeState request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.ConfirmMessage stateChange(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.TaskChangeState request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.ConfirmMessage) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.ConfirmMessage.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class AllocateTaskService
      implements com.google.protobuf.Service {
    protected AllocateTaskService() {}
    
    public interface Interface {
      public abstract void allocateTasks(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.AllocateIdentity request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.TState> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new AllocateTaskService() {
        @Override
        public  void allocateTasks(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.AllocateIdentity request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.TState> done) {
          impl.allocateTasks(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.allocateTasks(controller, (com.klose.MsConnProto.AllocateIdentity)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.AllocateIdentity.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.TState.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void allocateTasks(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.AllocateIdentity request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.TState> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(7);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.allocateTasks(controller, (com.klose.MsConnProto.AllocateIdentity)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.TState>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.AllocateIdentity.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.TState.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.AllocateTaskService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void allocateTasks(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.AllocateIdentity request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.TState> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.TState.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.TState.class,
            com.klose.MsConnProto.TState.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.TState allocateTasks(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.AllocateIdentity request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.TState allocateTasks(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.AllocateIdentity request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.TState) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.TState.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_UrgentRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_UrgentRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_UrgentResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_UrgentResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_TransformXMLPath_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_TransformXMLPath_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_SlaveRegisterInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_SlaveRegisterInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_SlaveRegisterResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_SlaveRegisterResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_SlaveInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_SlaveInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_SlaveInfo_cpuInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_SlaveInfo_cpuInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_SlaveInfo_memInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_SlaveInfo_memInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_SlaveInfo_diskInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_SlaveInfo_diskInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_MasterInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_MasterInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_InformSlaves_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_InformSlaves_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_TaskChangeState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_TaskChangeState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_TaskChangeState_outputProperty_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_TaskChangeState_outputProperty_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_AllocateIdentity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_AllocateIdentity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_AllocateIdentity_JobProperty_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_AllocateIdentity_JobProperty_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_TState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_TState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_ConfirmMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_ConfirmMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_ExecOrder_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_ExecOrder_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_ExecOrderResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_ExecOrderResp_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntest.proto\022\tcom.klose\"!\n\rUrgentRequest" +
      "\022\020\n\010str_data\030\001 \002(\t\"6\n\016UrgentResponse\022\022\n\n" +
      "is_success\030\001 \002(\010\022\020\n\010str_data\030\002 \001(\t\" \n\020Tr" +
      "ansformXMLPath\022\014\n\004path\030\001 \002(\t\"Z\n\021SlaveReg" +
      "isterInfo\022\017\n\007ip_port\030\001 \002(\t\022\r\n\005state\030\002 \001(" +
      "\005\022\022\n\nlogin_time\030\003 \001(\t\022\021\n\texit_time\030\004 \001(\t" +
      "\"*\n\025SlaveRegisterResponse\022\021\n\tisSuccess\030\001" +
      " \002(\010\"\335\003\n\tSlaveInfo\022\017\n\007ip_port\030\001 \002(\t\022\020\n\010w" +
      "ork_dir\030\002 \002(\t\022.\n\010cpu_info\030\003 \002(\0132\034.com.kl" +
      "ose.SlaveInfo.cpuInfo\022.\n\010mem_info\030\004 \002(\0132",
      "\034.com.klose.SlaveInfo.memInfo\0220\n\tdisk_in" +
      "fo\030\005 \003(\0132\035.com.klose.SlaveInfo.diskInfo\032" +
      "b\n\007cpuInfo\022\016\n\006vendor\030\001 \002(\t\022\r\n\005model\030\002 \002(" +
      "\t\022\013\n\003mhz\030\004 \002(\t\022\022\n\ntotal_cpus\030\005 \002(\t\022\027\n\017to" +
      "tal_idle_time\030\006 \002(\t\032<\n\007memInfo\022\024\n\014total_" +
      "memory\030\001 \002(\t\022\014\n\004used\030\002 \002(\t\022\r\n\005avail\030\004 \002(" +
      "\t\032y\n\010diskInfo\022\020\n\010dev_name\030\001 \002(\t\022\014\n\004size\030" +
      "\002 \002(\t\022\014\n\004used\030\003 \002(\t\022\r\n\005avail\030\004 \002(\t\022\020\n\010us" +
      "ed_pct\030\005 \002(\t\022\020\n\010dir_name\030\006 \002(\t\022\014\n\004type\030\007" +
      " \002(\t\"\037\n\nMasterInfo\022\021\n\tisSuccess\030\001 \002(\010\"0\n",
      "\014InformSlaves\022\017\n\007ip_port\030\001 \002(\t\022\017\n\007messag" +
      "e\030\002 \001(\t\"\253\001\n\017TaskChangeState\022\016\n\006taskId\030\001 " +
      "\002(\t\022\r\n\005state\030\002 \002(\t\0229\n\006output\030\003 \003(\0132).com" +
      ".klose.TaskChangeState.outputProperty\022\020\n" +
      "\010usedTime\030\004 \001(\t\032,\n\016outputProperty\022\013\n\003key" +
      "\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\240\001\n\020AllocateIdenti" +
      "ty\022\023\n\013slaveIpPort\030\001 \002(\t\022\017\n\007taskIds\030\002 \002(\t" +
      "\022;\n\nproperties\030\003 \003(\0132\'.com.klose.Allocat" +
      "eIdentity.JobProperty\032)\n\013JobProperty\022\013\n\003" +
      "key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\033\n\006TState\022\021\n\tta",
      "skState\030\001 \002(\t\"#\n\016ConfirmMessage\022\021\n\tisSuc" +
      "cess\030\001 \002(\010\"\032\n\tExecOrder\022\r\n\005order\030\001 \002(\t\";" +
      "\n\rExecOrderResp\022\022\n\nisExecuted\030\001 \002(\010\022\026\n\016r" +
      "esult_message\030\002 \001(\t2T\n\020MasterUrgentExit\022" +
      "@\n\nUrgentExit\022\027.com.klose.InformSlaves\032\031" +
      ".com.klose.ConfirmMessage2T\n\017SlaveUrgent" +
      "Exit\022A\n\nUrgentExit\022\030.com.klose.UrgentReq" +
      "uest\032\031.com.klose.UrgentResponse2g\n\024Regis" +
      "terSlaveService\022O\n\rSlaveRegister\022\034.com.k" +
      "lose.SlaveRegisterInfo\032 .com.klose.Slave",
      "RegisterResponse2Q\n\020HeartbeatService\022=\n\016" +
      "HeartbeatTrans\022\024.com.klose.SlaveInfo\032\025.c" +
      "om.klose.MasterInfo2[\n\031SlaveOrderExecuto" +
      "rService\022>\n\014ExecuteOrder\022\024.com.klose.Exe" +
      "cOrder\032\030.com.klose.ExecOrderResp2Y\n\023XMLP" +
      "athTransService\022B\n\010xmlTrans\022\033.com.klose." +
      "TransformXMLPath\032\031.com.klose.ConfirmMess" +
      "age2^\n\026TaskStateChangeService\022D\n\013stateCh" +
      "ange\022\032.com.klose.TaskChangeState\032\031.com.k" +
      "lose.ConfirmMessage2V\n\023AllocateTaskServi",
      "ce\022?\n\rallocateTasks\022\033.com.klose.Allocate" +
      "Identity\032\021.com.klose.TStateB\030\n\tcom.klose" +
      "B\013MsConnProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_klose_UrgentRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_klose_UrgentRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_UrgentRequest_descriptor,
              new java.lang.String[] { "StrData", },
              com.klose.MsConnProto.UrgentRequest.class,
              com.klose.MsConnProto.UrgentRequest.Builder.class);
          internal_static_com_klose_UrgentResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_klose_UrgentResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_UrgentResponse_descriptor,
              new java.lang.String[] { "IsSuccess", "StrData", },
              com.klose.MsConnProto.UrgentResponse.class,
              com.klose.MsConnProto.UrgentResponse.Builder.class);
          internal_static_com_klose_TransformXMLPath_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_klose_TransformXMLPath_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_TransformXMLPath_descriptor,
              new java.lang.String[] { "Path", },
              com.klose.MsConnProto.TransformXMLPath.class,
              com.klose.MsConnProto.TransformXMLPath.Builder.class);
          internal_static_com_klose_SlaveRegisterInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_klose_SlaveRegisterInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_SlaveRegisterInfo_descriptor,
              new java.lang.String[] { "IpPort", "State", "LoginTime", "ExitTime", },
              com.klose.MsConnProto.SlaveRegisterInfo.class,
              com.klose.MsConnProto.SlaveRegisterInfo.Builder.class);
          internal_static_com_klose_SlaveRegisterResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_klose_SlaveRegisterResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_SlaveRegisterResponse_descriptor,
              new java.lang.String[] { "IsSuccess", },
              com.klose.MsConnProto.SlaveRegisterResponse.class,
              com.klose.MsConnProto.SlaveRegisterResponse.Builder.class);
          internal_static_com_klose_SlaveInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_klose_SlaveInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_SlaveInfo_descriptor,
              new java.lang.String[] { "IpPort", "WorkDir", "CpuInfo", "MemInfo", "DiskInfo", },
              com.klose.MsConnProto.SlaveInfo.class,
              com.klose.MsConnProto.SlaveInfo.Builder.class);
          internal_static_com_klose_SlaveInfo_cpuInfo_descriptor =
            internal_static_com_klose_SlaveInfo_descriptor.getNestedTypes().get(0);
          internal_static_com_klose_SlaveInfo_cpuInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_SlaveInfo_cpuInfo_descriptor,
              new java.lang.String[] { "Vendor", "Model", "Mhz", "TotalCpus", "TotalIdleTime", },
              com.klose.MsConnProto.SlaveInfo.cpuInfo.class,
              com.klose.MsConnProto.SlaveInfo.cpuInfo.Builder.class);
          internal_static_com_klose_SlaveInfo_memInfo_descriptor =
            internal_static_com_klose_SlaveInfo_descriptor.getNestedTypes().get(1);
          internal_static_com_klose_SlaveInfo_memInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_SlaveInfo_memInfo_descriptor,
              new java.lang.String[] { "TotalMemory", "Used", "Avail", },
              com.klose.MsConnProto.SlaveInfo.memInfo.class,
              com.klose.MsConnProto.SlaveInfo.memInfo.Builder.class);
          internal_static_com_klose_SlaveInfo_diskInfo_descriptor =
            internal_static_com_klose_SlaveInfo_descriptor.getNestedTypes().get(2);
          internal_static_com_klose_SlaveInfo_diskInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_SlaveInfo_diskInfo_descriptor,
              new java.lang.String[] { "DevName", "Size", "Used", "Avail", "UsedPct", "DirName", "Type", },
              com.klose.MsConnProto.SlaveInfo.diskInfo.class,
              com.klose.MsConnProto.SlaveInfo.diskInfo.Builder.class);
          internal_static_com_klose_MasterInfo_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_klose_MasterInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_MasterInfo_descriptor,
              new java.lang.String[] { "IsSuccess", },
              com.klose.MsConnProto.MasterInfo.class,
              com.klose.MsConnProto.MasterInfo.Builder.class);
          internal_static_com_klose_InformSlaves_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_klose_InformSlaves_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_InformSlaves_descriptor,
              new java.lang.String[] { "IpPort", "Message", },
              com.klose.MsConnProto.InformSlaves.class,
              com.klose.MsConnProto.InformSlaves.Builder.class);
          internal_static_com_klose_TaskChangeState_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_klose_TaskChangeState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_TaskChangeState_descriptor,
              new java.lang.String[] { "TaskId", "State", "Output", "UsedTime", },
              com.klose.MsConnProto.TaskChangeState.class,
              com.klose.MsConnProto.TaskChangeState.Builder.class);
          internal_static_com_klose_TaskChangeState_outputProperty_descriptor =
            internal_static_com_klose_TaskChangeState_descriptor.getNestedTypes().get(0);
          internal_static_com_klose_TaskChangeState_outputProperty_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_TaskChangeState_outputProperty_descriptor,
              new java.lang.String[] { "Key", "Value", },
              com.klose.MsConnProto.TaskChangeState.outputProperty.class,
              com.klose.MsConnProto.TaskChangeState.outputProperty.Builder.class);
          internal_static_com_klose_AllocateIdentity_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_klose_AllocateIdentity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_AllocateIdentity_descriptor,
              new java.lang.String[] { "SlaveIpPort", "TaskIds", "Properties", },
              com.klose.MsConnProto.AllocateIdentity.class,
              com.klose.MsConnProto.AllocateIdentity.Builder.class);
          internal_static_com_klose_AllocateIdentity_JobProperty_descriptor =
            internal_static_com_klose_AllocateIdentity_descriptor.getNestedTypes().get(0);
          internal_static_com_klose_AllocateIdentity_JobProperty_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_AllocateIdentity_JobProperty_descriptor,
              new java.lang.String[] { "Key", "Value", },
              com.klose.MsConnProto.AllocateIdentity.JobProperty.class,
              com.klose.MsConnProto.AllocateIdentity.JobProperty.Builder.class);
          internal_static_com_klose_TState_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_klose_TState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_TState_descriptor,
              new java.lang.String[] { "TaskState", },
              com.klose.MsConnProto.TState.class,
              com.klose.MsConnProto.TState.Builder.class);
          internal_static_com_klose_ConfirmMessage_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_klose_ConfirmMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_ConfirmMessage_descriptor,
              new java.lang.String[] { "IsSuccess", },
              com.klose.MsConnProto.ConfirmMessage.class,
              com.klose.MsConnProto.ConfirmMessage.Builder.class);
          internal_static_com_klose_ExecOrder_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_com_klose_ExecOrder_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_ExecOrder_descriptor,
              new java.lang.String[] { "Order", },
              com.klose.MsConnProto.ExecOrder.class,
              com.klose.MsConnProto.ExecOrder.Builder.class);
          internal_static_com_klose_ExecOrderResp_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_com_klose_ExecOrderResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_ExecOrderResp_descriptor,
              new java.lang.String[] { "IsExecuted", "ResultMessage", },
              com.klose.MsConnProto.ExecOrderResp.class,
              com.klose.MsConnProto.ExecOrderResp.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
