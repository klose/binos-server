// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package com.klose;

public final class MsConnProto {
  private MsConnProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Request extends
      com.google.protobuf.GeneratedMessage {
    // Use Request.newBuilder() to construct.
    private Request() {
      initFields();
    }
    private Request(boolean noInit) {}
    
    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }
    
    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_Request_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_Request_fieldAccessorTable;
    }
    
    // required string str_data = 1;
    public static final int STR_DATA_FIELD_NUMBER = 1;
    private boolean hasStrData;
    private java.lang.String strData_ = "";
    public boolean hasStrData() { return hasStrData; }
    public java.lang.String getStrData() { return strData_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasStrData) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStrData()) {
        output.writeString(1, getStrData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStrData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getStrData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.Request result;
      
      // Construct using com.klose.MsConnProto.Request.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.Request();
        return builder;
      }
      
      protected com.klose.MsConnProto.Request internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.Request();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.Request.getDescriptor();
      }
      
      public com.klose.MsConnProto.Request getDefaultInstanceForType() {
        return com.klose.MsConnProto.Request.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.Request build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.Request buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.Request buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.Request returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.Request) {
          return mergeFrom((com.klose.MsConnProto.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.Request other) {
        if (other == com.klose.MsConnProto.Request.getDefaultInstance()) return this;
        if (other.hasStrData()) {
          setStrData(other.getStrData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setStrData(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string str_data = 1;
      public boolean hasStrData() {
        return result.hasStrData();
      }
      public java.lang.String getStrData() {
        return result.getStrData();
      }
      public Builder setStrData(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStrData = true;
        result.strData_ = value;
        return this;
      }
      public Builder clearStrData() {
        result.hasStrData = false;
        result.strData_ = getDefaultInstance().getStrData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.Request)
    }
    
    static {
      defaultInstance = new Request(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.Request)
  }
  
  public static final class Response extends
      com.google.protobuf.GeneratedMessage {
    // Use Response.newBuilder() to construct.
    private Response() {
      initFields();
    }
    private Response(boolean noInit) {}
    
    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }
    
    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_Response_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_Response_fieldAccessorTable;
    }
    
    // required string str_data = 1;
    public static final int STR_DATA_FIELD_NUMBER = 1;
    private boolean hasStrData;
    private java.lang.String strData_ = "";
    public boolean hasStrData() { return hasStrData; }
    public java.lang.String getStrData() { return strData_; }
    
    // optional int32 int_data = 2;
    public static final int INT_DATA_FIELD_NUMBER = 2;
    private boolean hasIntData;
    private int intData_ = 0;
    public boolean hasIntData() { return hasIntData; }
    public int getIntData() { return intData_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasStrData) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStrData()) {
        output.writeString(1, getStrData());
      }
      if (hasIntData()) {
        output.writeInt32(2, getIntData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStrData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getStrData());
      }
      if (hasIntData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getIntData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.Response result;
      
      // Construct using com.klose.MsConnProto.Response.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.Response();
        return builder;
      }
      
      protected com.klose.MsConnProto.Response internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.Response();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.Response.getDescriptor();
      }
      
      public com.klose.MsConnProto.Response getDefaultInstanceForType() {
        return com.klose.MsConnProto.Response.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.Response build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.Response buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.Response buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.Response returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.Response) {
          return mergeFrom((com.klose.MsConnProto.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.Response other) {
        if (other == com.klose.MsConnProto.Response.getDefaultInstance()) return this;
        if (other.hasStrData()) {
          setStrData(other.getStrData());
        }
        if (other.hasIntData()) {
          setIntData(other.getIntData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setStrData(input.readString());
              break;
            }
            case 16: {
              setIntData(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string str_data = 1;
      public boolean hasStrData() {
        return result.hasStrData();
      }
      public java.lang.String getStrData() {
        return result.getStrData();
      }
      public Builder setStrData(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStrData = true;
        result.strData_ = value;
        return this;
      }
      public Builder clearStrData() {
        result.hasStrData = false;
        result.strData_ = getDefaultInstance().getStrData();
        return this;
      }
      
      // optional int32 int_data = 2;
      public boolean hasIntData() {
        return result.hasIntData();
      }
      public int getIntData() {
        return result.getIntData();
      }
      public Builder setIntData(int value) {
        result.hasIntData = true;
        result.intData_ = value;
        return this;
      }
      public Builder clearIntData() {
        result.hasIntData = false;
        result.intData_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.Response)
    }
    
    static {
      defaultInstance = new Response(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.Response)
  }
  
  public static final class SlaveRegisterRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SlaveRegisterRequest.newBuilder() to construct.
    private SlaveRegisterRequest() {
      initFields();
    }
    private SlaveRegisterRequest(boolean noInit) {}
    
    private static final SlaveRegisterRequest defaultInstance;
    public static SlaveRegisterRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SlaveRegisterRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveRegisterRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveRegisterRequest_fieldAccessorTable;
    }
    
    // required string ip_port = 1;
    public static final int IP_PORT_FIELD_NUMBER = 1;
    private boolean hasIpPort;
    private java.lang.String ipPort_ = "";
    public boolean hasIpPort() { return hasIpPort; }
    public java.lang.String getIpPort() { return ipPort_; }
    
    // optional int32 state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private boolean hasState;
    private int state_ = 0;
    public boolean hasState() { return hasState; }
    public int getState() { return state_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIpPort) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIpPort()) {
        output.writeString(1, getIpPort());
      }
      if (hasState()) {
        output.writeInt32(2, getState());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIpPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getIpPort());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getState());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.SlaveRegisterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.SlaveRegisterRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.SlaveRegisterRequest result;
      
      // Construct using com.klose.MsConnProto.SlaveRegisterRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.SlaveRegisterRequest();
        return builder;
      }
      
      protected com.klose.MsConnProto.SlaveRegisterRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.SlaveRegisterRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.SlaveRegisterRequest.getDescriptor();
      }
      
      public com.klose.MsConnProto.SlaveRegisterRequest getDefaultInstanceForType() {
        return com.klose.MsConnProto.SlaveRegisterRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.SlaveRegisterRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.SlaveRegisterRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.SlaveRegisterRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.SlaveRegisterRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.SlaveRegisterRequest) {
          return mergeFrom((com.klose.MsConnProto.SlaveRegisterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.SlaveRegisterRequest other) {
        if (other == com.klose.MsConnProto.SlaveRegisterRequest.getDefaultInstance()) return this;
        if (other.hasIpPort()) {
          setIpPort(other.getIpPort());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setIpPort(input.readString());
              break;
            }
            case 16: {
              setState(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string ip_port = 1;
      public boolean hasIpPort() {
        return result.hasIpPort();
      }
      public java.lang.String getIpPort() {
        return result.getIpPort();
      }
      public Builder setIpPort(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIpPort = true;
        result.ipPort_ = value;
        return this;
      }
      public Builder clearIpPort() {
        result.hasIpPort = false;
        result.ipPort_ = getDefaultInstance().getIpPort();
        return this;
      }
      
      // optional int32 state = 2;
      public boolean hasState() {
        return result.hasState();
      }
      public int getState() {
        return result.getState();
      }
      public Builder setState(int value) {
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.SlaveRegisterRequest)
    }
    
    static {
      defaultInstance = new SlaveRegisterRequest(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.SlaveRegisterRequest)
  }
  
  public static final class SlaveRegisterResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SlaveRegisterResponse.newBuilder() to construct.
    private SlaveRegisterResponse() {
      initFields();
    }
    private SlaveRegisterResponse(boolean noInit) {}
    
    private static final SlaveRegisterResponse defaultInstance;
    public static SlaveRegisterResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SlaveRegisterResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveRegisterResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.klose.MsConnProto.internal_static_com_klose_SlaveRegisterResponse_fieldAccessorTable;
    }
    
    // required bool isSuccess = 1;
    public static final int ISSUCCESS_FIELD_NUMBER = 1;
    private boolean hasIsSuccess;
    private boolean isSuccess_ = false;
    public boolean hasIsSuccess() { return hasIsSuccess; }
    public boolean getIsSuccess() { return isSuccess_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIsSuccess) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIsSuccess()) {
        output.writeBool(1, getIsSuccess());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIsSuccess()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getIsSuccess());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.klose.MsConnProto.SlaveRegisterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.klose.MsConnProto.SlaveRegisterResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.klose.MsConnProto.SlaveRegisterResponse result;
      
      // Construct using com.klose.MsConnProto.SlaveRegisterResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.klose.MsConnProto.SlaveRegisterResponse();
        return builder;
      }
      
      protected com.klose.MsConnProto.SlaveRegisterResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.klose.MsConnProto.SlaveRegisterResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.klose.MsConnProto.SlaveRegisterResponse.getDescriptor();
      }
      
      public com.klose.MsConnProto.SlaveRegisterResponse getDefaultInstanceForType() {
        return com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.klose.MsConnProto.SlaveRegisterResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.klose.MsConnProto.SlaveRegisterResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.klose.MsConnProto.SlaveRegisterResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.klose.MsConnProto.SlaveRegisterResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.klose.MsConnProto.SlaveRegisterResponse) {
          return mergeFrom((com.klose.MsConnProto.SlaveRegisterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.klose.MsConnProto.SlaveRegisterResponse other) {
        if (other == com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance()) return this;
        if (other.hasIsSuccess()) {
          setIsSuccess(other.getIsSuccess());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setIsSuccess(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required bool isSuccess = 1;
      public boolean hasIsSuccess() {
        return result.hasIsSuccess();
      }
      public boolean getIsSuccess() {
        return result.getIsSuccess();
      }
      public Builder setIsSuccess(boolean value) {
        result.hasIsSuccess = true;
        result.isSuccess_ = value;
        return this;
      }
      public Builder clearIsSuccess() {
        result.hasIsSuccess = false;
        result.isSuccess_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.klose.SlaveRegisterResponse)
    }
    
    static {
      defaultInstance = new SlaveRegisterResponse(true);
      com.klose.MsConnProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.klose.SlaveRegisterResponse)
  }
  
  public static abstract class TestService
      implements com.google.protobuf.Service {
    protected TestService() {}
    
    public interface Interface {
      public abstract void testMethod(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.Request request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.Response> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new TestService() {
        @Override
        public  void testMethod(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.Request request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.Response> done) {
          impl.testMethod(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.testMethod(controller, (com.klose.MsConnProto.Request)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.Request.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.Response.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void testMethod(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.Request request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.Response> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.testMethod(controller, (com.klose.MsConnProto.Request)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.Response>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.Request.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.Response.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.TestService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void testMethod(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.Request request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.Response> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.Response.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.Response.class,
            com.klose.MsConnProto.Response.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.Response testMethod(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.Request request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.Response testMethod(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.Request request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.Response) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.Response.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class RegisterSlaveService
      implements com.google.protobuf.Service {
    protected RegisterSlaveService() {}
    
    public interface Interface {
      public abstract void slaveRegister(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveRegisterRequest request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.SlaveRegisterResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new RegisterSlaveService() {
        @Override
        public  void slaveRegister(
            com.google.protobuf.RpcController controller,
            com.klose.MsConnProto.SlaveRegisterRequest request,
            com.google.protobuf.RpcCallback<com.klose.MsConnProto.SlaveRegisterResponse> done) {
          impl.slaveRegister(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.slaveRegister(controller, (com.klose.MsConnProto.SlaveRegisterRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.SlaveRegisterRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void slaveRegister(
        com.google.protobuf.RpcController controller,
        com.klose.MsConnProto.SlaveRegisterRequest request,
        com.google.protobuf.RpcCallback<com.klose.MsConnProto.SlaveRegisterResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.klose.MsConnProto.getDescriptor().getServices().get(1);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.slaveRegister(controller, (com.klose.MsConnProto.SlaveRegisterRequest)request,
            com.google.protobuf.RpcUtil.<com.klose.MsConnProto.SlaveRegisterResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.SlaveRegisterRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.klose.MsConnProto.RegisterSlaveService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void slaveRegister(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveRegisterRequest request,
          com.google.protobuf.RpcCallback<com.klose.MsConnProto.SlaveRegisterResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.klose.MsConnProto.SlaveRegisterResponse.class,
            com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.klose.MsConnProto.SlaveRegisterResponse slaveRegister(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveRegisterRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.klose.MsConnProto.SlaveRegisterResponse slaveRegister(
          com.google.protobuf.RpcController controller,
          com.klose.MsConnProto.SlaveRegisterRequest request)
          throws com.google.protobuf.ServiceException {
        return (com.klose.MsConnProto.SlaveRegisterResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.klose.MsConnProto.SlaveRegisterResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_Request_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_SlaveRegisterRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_SlaveRegisterRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_klose_SlaveRegisterResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_klose_SlaveRegisterResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntest.proto\022\tcom.klose\"\033\n\007Request\022\020\n\010st" +
      "r_data\030\001 \002(\t\".\n\010Response\022\020\n\010str_data\030\001 \002" +
      "(\t\022\020\n\010int_data\030\002 \001(\005\"6\n\024SlaveRegisterReq" +
      "uest\022\017\n\007ip_port\030\001 \002(\t\022\r\n\005state\030\002 \001(\005\"*\n\025" +
      "SlaveRegisterResponse\022\021\n\tisSuccess\030\001 \002(\010" +
      "2D\n\013TestService\0225\n\nTestMethod\022\022.com.klos" +
      "e.Request\032\023.com.klose.Response2j\n\024Regist" +
      "erSlaveService\022R\n\rSlaveRegister\022\037.com.kl" +
      "ose.SlaveRegisterRequest\032 .com.klose.Sla" +
      "veRegisterResponseB\030\n\tcom.kloseB\013MsConnP",
      "roto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_klose_Request_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_klose_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_Request_descriptor,
              new java.lang.String[] { "StrData", },
              com.klose.MsConnProto.Request.class,
              com.klose.MsConnProto.Request.Builder.class);
          internal_static_com_klose_Response_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_klose_Response_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_Response_descriptor,
              new java.lang.String[] { "StrData", "IntData", },
              com.klose.MsConnProto.Response.class,
              com.klose.MsConnProto.Response.Builder.class);
          internal_static_com_klose_SlaveRegisterRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_klose_SlaveRegisterRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_SlaveRegisterRequest_descriptor,
              new java.lang.String[] { "IpPort", "State", },
              com.klose.MsConnProto.SlaveRegisterRequest.class,
              com.klose.MsConnProto.SlaveRegisterRequest.Builder.class);
          internal_static_com_klose_SlaveRegisterResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_klose_SlaveRegisterResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_klose_SlaveRegisterResponse_descriptor,
              new java.lang.String[] { "IsSuccess", },
              com.klose.MsConnProto.SlaveRegisterResponse.class,
              com.klose.MsConnProto.SlaveRegisterResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
